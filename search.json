[{"path":"https://keyes-timothy.github.io/tidyFlowCore/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 tidyflowCore authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"installing-tidyflowcore","dir":"Articles","previous_headings":"Basics","what":"Installing tidyFlowCore","title":"tidyFlowCore","text":"R open-source statistical environment can easily modified enhance functionality via packages. tidyFlowCore R package available via Bioconductor, open-source repository R packages related biostatistics biocomputing. R can installed operating system CRAN can install tidyFlowCore using following commands R session:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {       install.packages(\"BiocManager\")   }  BiocManager::install(\"tidyFlowCore\")  ## Check that you have a valid Bioconductor installation BiocManager::valid()"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"preliminaries","dir":"Articles","previous_headings":"Basics","what":"Preliminaries","title":"tidyFlowCore","text":"tidyFlowCore adopts -called “tidy” functional programming paradigm developed Wickham et al. tidyverse ecosystem R packages (Wickham, François, Henry, Müller, Vaughan, 2023). information tidyverse ecosytem broadly, feel free reference (free) R Data Science book, tidyverse website, paper describing larger tidyomics project. tidyFlowCore integrates flowCore Bioconductor package’s data analysis capabilities tidyverse. ’re relatively unfamiliar Bioconductor project, might interested blog post.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"asking-for-help","dir":"Articles","previous_headings":"Basics","what":"Asking for help","title":"tidyFlowCore","text":"Learning use R Bioconductor can challenging, ’s important know get help. main place ask questions tidyFlowCore Bioconductor support site. Use tidyFlowCore tag look previous posts. can also ask questions GitHub Twitter. remember, ’re asking help, follow posting guidelines. Make sure include simple example reproduces issue (“reprex”) session info help developers understand solve problem.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"citing-tidyflowcore","dir":"Articles","previous_headings":"Basics","what":"Citing tidyFlowCore","title":"tidyFlowCore","text":"use tidyFlowCore research, please use following citation.","code":"citation(\"tidyFlowCore\") #> Warning in person1(given = given[[i]], family = family[[i]], middle = #> middle[[i]], : It is recommended to use 'given' instead of 'middle'. #> To cite package 'tidyFlowCore' in publications use: #>  #>   Keyes TJ (2024). _tidyFlowCore: Bringing flowCore to the tidyverse_. #>   doi:10.18129/B9.bioc.tidyFlowCore #>   <https://doi.org/10.18129/B9.bioc.tidyFlowCore>, #>   https://github.com/keyes-timothy/tidyflowCore/tidyFlowCore - R #>   package version 0.99.1, #>   <http://www.bioconductor.org/packages/tidyFlowCore>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {tidyFlowCore: Bringing flowCore to the tidyverse}, #>     author = {Timothy J Keyes}, #>     year = {2024}, #>     url = {http://www.bioconductor.org/packages/tidyFlowCore}, #>     note = {https://github.com/keyes-timothy/tidyflowCore/tidyFlowCore - R package version 0.99.1}, #>     doi = {10.18129/B9.bioc.tidyFlowCore}, #>   }"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"tidyflowcore-quick-start","dir":"Articles","previous_headings":"","what":"tidyFlowCore quick start","title":"tidyFlowCore","text":"tidyFlowCore allows treat flowCore data structures like tidy data.frames tibbles. implementing dplyr, tidyr, ggplot2 verbs can deployed directly flowFrame flowSet S4 classes. section, give brief example tidyFlowCore can enable data analysis pipeline use useful functions flowCore package many functions dplyr, tidyr, ggplot2 packages.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"load-required-packages","dir":"Articles","previous_headings":"tidyFlowCore quick start","what":"Load required packages","title":"tidyFlowCore","text":"","code":"library(tidyFlowCore) library(flowCore)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"read-data","dir":"Articles","previous_headings":"tidyFlowCore quick start","what":"Read data","title":"tidyFlowCore","text":"example , download publicly available mass cytometry (CyTOF) data downloadable (Weber, M, Soneson, Charlotte, 2019) package. data made available flowCore::flowSet S4 object, Bioconductor’s standard data structure cytometry data. read dataset, run following command:","code":"# read data from the HDCytoData package bcr_flowset <- HDCytoData::Bodenmiller_BCR_XL_flowSet() #> see ?HDCytoData and browseVignettes('HDCytoData') for documentation #> downloading 1 resources #> retrieving 1 resource #> loading from cache #> Warning in updateObjectFromSlots(object, ..., verbose = verbose): dropping #> slot(s) 'colnames' from object = 'flowSet' ?HDCytoData::Bodenmiller_BCR_XL_flowSet"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"data-transformation","dir":"Articles","previous_headings":"tidyFlowCore quick start","what":"Data transformation","title":"tidyFlowCore","text":"flowCore package natively supports multiple types data preprocessing transformations cytometry data use tranform class. example, want apply standard arcsinh transformation often used CyTOF data current dataset, use following code: Alternatively, can also use tidyverse’s functional programming paradigm perform transformation. , use mutate-across framework via tidyFlowCore:","code":"asinh_transformation <- flowCore::arcsinhTransform(a = 0, b = 1/5, c = 0) transformation_list <-    flowCore::transformList(     colnames(bcr_flowset),      asinh_transformation   )  transformed_bcr_flowset <- flowCore::transform(bcr_flowset, transformation_list) transformed_bcr_flowset <-    bcr_flowset |>   dplyr::mutate(across(-ends_with(\"_id\"), \\(.x) asinh(.x / 5)))"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"cell-type-counting","dir":"Articles","previous_headings":"tidyFlowCore quick start","what":"Cell type counting","title":"tidyFlowCore","text":"Suppose ’re interested counting number cells belong cell type (encoded population_id column bcr_flowset) dataset. Using standard flowCore functions, perform calculation steps: tidyFlowCore allows us perform operation simply using dplyr package’s count function: tidyFlowCore also makes easy perform counting broken variables metadata:","code":"# extract all expression matrices from our flowSet  combined_matrix <- flowCore::fsApply(bcr_flowset, exprs)  # take out the concatenated population_id column  combined_population_id <- combined_matrix[, 'population_id']  # perform the calculation table(combined_population_id) #> combined_population_id #>     1     2     3     4     5     6     7     8  #>  3265  6651 62890 51150  1980 18436 24518  3901 bcr_flowset |>    dplyr::count(population_id) #> # A tibble: 8 × 2 #>   population_id     n #>           <dbl> <int> #> 1             1  3265 #> 2             2  6651 #> 3             3 62890 #> 4             4 51150 #> 5             5  1980 #> 6             6 18436 #> 7             7 24518 #> 8             8  3901 bcr_flowset |>    # use the .tidyFlowCore_identifier pronoun to access the name of    # each experiment in the flowSet    dplyr::count(.tidyFlowCore_identifier, population_id) #> # A tibble: 128 × 3 #>    .tidyFlowCore_identifier           population_id     n #>    <chr>                                      <dbl> <int> #>  1 PBMC8_30min_patient1_BCR-XL.fcs                1    31 #>  2 PBMC8_30min_patient1_BCR-XL.fcs                2   112 #>  3 PBMC8_30min_patient1_BCR-XL.fcs                3   761 #>  4 PBMC8_30min_patient1_BCR-XL.fcs                4  1307 #>  5 PBMC8_30min_patient1_BCR-XL.fcs                5     5 #>  6 PBMC8_30min_patient1_BCR-XL.fcs                6   127 #>  7 PBMC8_30min_patient1_BCR-XL.fcs                7   444 #>  8 PBMC8_30min_patient1_BCR-XL.fcs                8    51 #>  9 PBMC8_30min_patient1_Reference.fcs             1    52 #> 10 PBMC8_30min_patient1_Reference.fcs             2   132 #> # ℹ 118 more rows"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"nesting-and-unnesting","dir":"Articles","previous_headings":"tidyFlowCore quick start","what":"Nesting and unnesting","title":"tidyFlowCore","text":"flowFrame flowSet data objects clear relationship one another flowCore API - essentially nested flowFrames. words, flowSets made multiple flowFrames! tidyFlowCore provides useful API converting flowSet flowFrame data structures various degrees nesting using group/nest ungroup/unnest verbs. Note dplyr tidyr APIs, group/nest ungroup/unnest synonyms (grouped data.frames different nested data.frames). However, flowFrames flowSets structured, tidyFlowCore’s group/nest ungroup/unnest functions identical behavior, respectively.","code":"# unnesting a flowSet results in a flowFrame with an additional column,  # 'tidyFlowCore_name` that identifies cells based on which experiment in the  # original flowSet they come from bcr_flowset |>    dplyr::ungroup() #> flowFrame object 'file1a8520120734' #> with 172791 cells and 40 observables: #>                    name               desc     range  minRange  maxRange #> $P1                Time               Time   2399633    0.0000   2399632 #> $P2         Cell_length        Cell_length        69    0.0000        68 #> $P3      CD3(110:114)Dd     CD3(110:114)Dd      9383  -61.6796      9382 #> $P4       CD45(In115)Dd      CD45(In115)Dd      5035    0.0000      5034 #> $P5        BC1(La139)Dd       BC1(La139)Dd     14306 -100.8797     14305 #> ...                 ...                ...       ...       ...       ... #> $P36           group_id           group_id         3         0         2 #> $P37         patient_id         patient_id         9         0         8 #> $P38          sample_id          sample_id        17         0        16 #> $P39      population_id      population_id         9         0         8 #> $P40 .tidyFlowCore_name .tidyFlowCore_name        17         0        16 #> 297 keywords are stored in the 'description' slot # flowSets can be unnested and renested for various analyses bcr_flowset |>    dplyr::ungroup() |>    # group_by cell type   dplyr::group_by(population_id) |>    # calculate the mean HLA-DR expression of each cell population   dplyr::summarize(mean_expression = mean(`HLA-DR(Yb174)Dd`)) |>    dplyr::select(population_id, mean_expression) #> # A tibble: 8 × 2 #>   population_id mean_expression #>           <dbl>           <dbl> #> 1             3            3.67 #> 2             7            3.33 #> 3             4            4.33 #> 4             2           87.1  #> 5             6           88.2  #> 6             8            3.12 #> 7             1           51.4  #> 8             5           18.0"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"plotting","dir":"Articles","previous_headings":"tidyFlowCore quick start","what":"Plotting","title":"tidyFlowCore","text":"tidyFlowCore also provides direct interface ggplot2 flowFrame flowSet data objects. example…","code":"library(ggplot2) bcr_flowset |>    dplyr::mutate(across(-ends_with(\"_id\"), \\(.x) asinh(.x / 5))) |>    ggplot(aes(x = `CD45(In115)Dd`, y = `CD4(Nd145)Dd`)) +    geom_point(size = 0.1, alpha = 0.1) +   facet_wrap(facets = vars(population_id))"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"reproducibility","dir":"Articles","previous_headings":"","what":"Reproducibility","title":"tidyFlowCore","text":"tidyFlowCore package (Keyes, 2024) made possible thanks following: R (R Core Team, 2024) BiocStyle (Oleś, 2023) knitr (Xie, 2023) RefManageR (McLean, 2017) rmarkdown (Allaire, Xie, Dervieux, McPherson, Luraschi, Ushey, Atkins, Wickham, Cheng, Chang, Iannone, 2024) sessioninfo (Wickham, Chang, Flight, Müller, Hester, 2021) testthat (Wickham, 2011) tidyverse (Wickham, François, Henry et al., 2023) package developed using biocthis. Code creating vignette Date vignette generated. Wallclock time spent generating vignette. R session information.","code":"## Create the vignette library(\"rmarkdown\") system.time(render(\"tidyFlowCore.Rmd\", \"BiocStyle::html_document\"))  ## Extract the R code library(\"knitr\") knit(\"tidyFlowCore.Rmd\", tangle = TRUE) #> [1] \"2024-03-25 03:30:56 UTC\" #> Time difference of 24.882 secs #> ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.3.3 (2024-02-29) #>  os       Ubuntu 22.04.4 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  C.UTF-8 #>  ctype    C.UTF-8 #>  tz       UTC #>  date     2024-03-25 #>  pandoc   3.1.11 @ /opt/hostedtoolcache/pandoc/3.1.11/x64/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package                * version   date (UTC) lib source #>  abind                    1.4-5     2016-07-21 [1] RSPM #>  AnnotationDbi            1.64.1    2023-11-03 [1] Bioconductor #>  AnnotationHub          * 3.10.0    2023-10-24 [1] Bioconductor #>  backports                1.4.1     2021-12-13 [1] RSPM #>  bibtex                   0.5.1     2023-01-26 [1] RSPM #>  Biobase                * 2.62.0    2023-10-24 [1] Bioconductor #>  BiocFileCache          * 2.10.1    2023-10-26 [1] Bioconductor #>  BiocGenerics           * 0.48.1    2023-11-01 [1] Bioconductor #>  BiocManager              1.30.22   2023-08-08 [1] RSPM #>  BiocStyle              * 2.30.0    2023-10-24 [1] Bioconductor #>  BiocVersion              3.18.1    2023-11-15 [1] Bioconductor #>  Biostrings               2.70.3    2024-03-13 [1] Bioconduc~ #>  bit                      4.0.5     2022-11-15 [1] RSPM #>  bit64                    4.0.5     2020-08-30 [1] RSPM #>  bitops                   1.0-7     2021-04-24 [1] RSPM #>  blob                     1.2.4     2023-03-17 [1] RSPM #>  bookdown                 0.38      2024-03-04 [1] RSPM #>  bslib                    0.6.2     2024-03-22 [1] RSPM #>  cachem                   1.0.8     2023-05-01 [1] RSPM #>  cli                      3.6.2     2023-12-11 [1] RSPM #>  colorspace               2.1-0     2023-01-23 [1] RSPM #>  crayon                   1.5.2     2022-09-29 [1] RSPM #>  curl                     5.2.1     2024-03-01 [1] RSPM #>  cytolib                  2.14.1    2024-01-18 [1] Bioconduc~ #>  DBI                      1.2.2     2024-02-16 [1] RSPM #>  dbplyr                 * 2.5.0     2024-03-19 [1] RSPM #>  DelayedArray             0.28.0    2023-10-24 [1] Bioconductor #>  desc                     1.4.3     2023-12-10 [1] RSPM #>  digest                   0.6.35    2024-03-11 [1] RSPM #>  dplyr                    1.1.4     2023-11-17 [1] RSPM #>  ellipsis                 0.3.2     2021-04-29 [1] RSPM #>  evaluate                 0.23      2023-11-01 [1] RSPM #>  ExperimentHub          * 2.10.0    2023-10-24 [1] Bioconductor #>  fansi                    1.0.6     2023-12-08 [1] RSPM #>  farver                   2.1.1     2022-07-06 [1] RSPM #>  fastmap                  1.1.1     2023-02-24 [1] RSPM #>  filelock                 1.0.3     2023-12-11 [1] RSPM #>  flowCore               * 2.14.2    2024-03-18 [1] Bioconduc~ #>  fs                       1.6.3     2023-07-20 [1] RSPM #>  generics                 0.1.3     2022-07-05 [1] RSPM #>  GenomeInfoDb           * 1.38.8    2024-03-15 [1] Bioconduc~ #>  GenomeInfoDbData         1.2.11    2024-03-25 [1] Bioconductor #>  GenomicRanges          * 1.54.1    2023-10-29 [1] Bioconductor #>  ggplot2                * 3.5.0     2024-02-23 [1] RSPM #>  glue                     1.7.0     2024-01-09 [1] RSPM #>  gtable                   0.3.4     2023-08-21 [1] RSPM #>  HDCytoData             * 1.22.1    2024-03-19 [1] Bioconduc~ #>  highr                    0.10      2022-12-22 [1] RSPM #>  htmltools                0.5.7     2023-11-03 [1] RSPM #>  httpuv                   1.6.14    2024-01-26 [1] RSPM #>  httr                     1.4.7     2023-08-15 [1] RSPM #>  interactiveDisplayBase   1.40.0    2023-10-24 [1] Bioconductor #>  IRanges                * 2.36.0    2023-10-24 [1] Bioconductor #>  jquerylib                0.1.4     2021-04-26 [1] RSPM #>  jsonlite                 1.8.8     2023-12-04 [1] RSPM #>  KEGGREST                 1.42.0    2023-10-24 [1] Bioconductor #>  knitr                    1.45      2023-10-30 [1] RSPM #>  labeling                 0.4.3     2023-08-29 [1] RSPM #>  later                    1.3.2     2023-12-06 [1] RSPM #>  lattice                  0.22-5    2023-10-24 [3] CRAN (R 4.3.3) #>  lifecycle                1.0.4     2023-11-07 [1] RSPM #>  lubridate                1.9.3     2023-09-27 [1] RSPM #>  magrittr                 2.0.3     2022-03-30 [1] RSPM #>  Matrix                   1.6-5     2024-01-11 [3] CRAN (R 4.3.3) #>  MatrixGenerics         * 1.14.0    2023-10-24 [1] Bioconductor #>  matrixStats            * 1.2.0     2023-12-11 [1] RSPM #>  memoise                  2.0.1     2021-11-26 [1] RSPM #>  mime                     0.12      2021-09-28 [1] RSPM #>  munsell                  0.5.0     2018-06-12 [1] RSPM #>  pillar                   1.9.0     2023-03-22 [1] RSPM #>  pkgconfig                2.0.3     2019-09-22 [1] RSPM #>  pkgdown                  2.0.7     2022-12-14 [1] any (@2.0.7) #>  plyr                     1.8.9     2023-10-02 [1] RSPM #>  png                      0.1-8     2022-11-29 [1] RSPM #>  promises                 1.2.1     2023-08-10 [1] RSPM #>  purrr                    1.0.2     2023-08-10 [1] RSPM #>  R6                       2.5.1     2021-08-19 [1] RSPM #>  ragg                     1.3.0     2024-03-13 [1] RSPM #>  rappdirs                 0.3.3     2021-01-31 [1] RSPM #>  Rcpp                     1.0.12    2024-01-09 [1] RSPM #>  RCurl                    1.98-1.14 2024-01-09 [1] RSPM #>  RefManageR             * 1.4.0     2022-09-30 [1] RSPM #>  rlang                    1.1.3     2024-01-10 [1] RSPM #>  rmarkdown                2.26      2024-03-05 [1] RSPM #>  RProtoBufLib             2.14.1    2024-03-18 [1] Bioconduc~ #>  RSQLite                  2.3.5     2024-01-21 [1] RSPM #>  S4Arrays                 1.2.1     2024-03-04 [1] Bioconduc~ #>  S4Vectors              * 0.40.2    2023-11-23 [1] Bioconduc~ #>  sass                     0.4.9     2024-03-15 [1] RSPM #>  scales                   1.3.0     2023-11-28 [1] RSPM #>  sessioninfo            * 1.2.2     2021-12-06 [1] RSPM #>  shiny                    1.8.0     2023-11-17 [1] RSPM #>  SparseArray              1.2.4     2024-02-11 [1] Bioconduc~ #>  stringi                  1.8.3     2023-12-11 [1] RSPM #>  stringr                  1.5.1     2023-11-14 [1] RSPM #>  SummarizedExperiment   * 1.32.0    2023-10-24 [1] Bioconductor #>  systemfonts              1.0.6     2024-03-07 [1] RSPM #>  textshaping              0.3.7     2023-10-09 [1] RSPM #>  tibble                   3.2.1     2023-03-20 [1] RSPM #>  tidyFlowCore           * 0.99.1    2024-03-25 [1] local #>  tidyr                    1.3.1     2024-01-24 [1] RSPM #>  tidyselect               1.2.1     2024-03-11 [1] RSPM #>  timechange               0.3.0     2024-01-18 [1] RSPM #>  utf8                     1.2.4     2023-10-22 [1] RSPM #>  vctrs                    0.6.5     2023-12-01 [1] RSPM #>  withr                    3.0.0     2024-01-16 [1] RSPM #>  xfun                     0.42      2024-02-08 [1] RSPM #>  xml2                     1.3.6     2023-12-04 [1] RSPM #>  xtable                   1.8-4     2019-04-21 [1] RSPM #>  XVector                  0.42.0    2023-10-24 [1] Bioconductor #>  yaml                     2.3.8     2023-12-11 [1] RSPM #>  zlibbioc                 1.48.2    2024-03-13 [1] Bioconduc~ #>  #>  [1] /home/runner/work/_temp/Library #>  [2] /opt/R/4.3.3/lib/R/site-library #>  [3] /opt/R/4.3.3/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"tidyFlowCore","text":"vignette generated using BiocStyle (Oleś, 2023) knitr (Xie, 2023) rmarkdown (Allaire, Xie, Dervieux et al., 2024) running behind scenes. Citations made RefManageR (McLean, 2017). [1] J. Allaire, Y. Xie, C. Dervieux, et al. rmarkdown: Dynamic Documents R. R package version 2.26. 2024. URL: https://github.com/rstudio/rmarkdown. [2] T. J. Keyes. tidyFlowCore: Bringing flowCore tidyverse. https://github.com/keyes-timothy/tidyflowCore/tidyFlowCore - R package version 0.99.1. 2024. DOI: 10.18129/B9.bioc.tidyFlowCore. URL: http://www.bioconductor.org/packages/tidyFlowCore. [3] M. W. McLean. “RefManageR: Import Manage BibTeX BibLaTeX References R”. : Journal Open Source Software (2017). DOI: 10.21105/joss.00338. [4] . Oleś. BiocStyle: Standard styles vignettes Bioconductor documents. R package version 2.30.0. 2023. DOI: 10.18129/B9.bioc.BiocStyle. URL: https://bioconductor.org/packages/BiocStyle. [5] R Core Team. R: Language Environment Statistical Computing. R Foundation Statistical Computing. Vienna, Austria, 2024. URL: https://www.R-project.org/. [6] Weber, L. M, Soneson, et al. “HDCytoData: Collection high-dimensional cytometry benchmark datasets Bioconductor object formats”. : F1000Research 8.v2 (2019), p. 1459. [7] H. Wickham. “testthat: Get Started Testing”. : R Journal 3 (2011), pp. 5–10. URL: https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf. [8] H. Wickham, W. Chang, R. Flight, et al. sessioninfo: R Session Information. R package version 1.2.2, https://r-lib.github.io/sessioninfo/. 2021. URL: https://github.com/r-lib/sessioninfo#readme. [9] H. Wickham, R. François, L. Henry, et al. dplyr: Grammar Data Manipulation. R package version 1.1.4, https://github.com/tidyverse/dplyr. 2023. URL: https://dplyr.tidyverse.org. [10] Y. Xie. knitr: General-Purpose Package Dynamic Report Generation R. R package version 1.45. 2023. URL: https://yihui.org/knitr/.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keyes. Maintainer. Kara Davis. Research team head, owner. Garry Nolan. Research team head, owner.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keyes TJ (2024). tidyFlowCore: Bringing flowCore tidyverse. doi:10.18129/B9.bioc.tidyFlowCore, https://github.com/keyes-timothy/tidyflowCore/tidyFlowCore - R package version 0.99.1, http://www.bioconductor.org/packages/tidyFlowCore.","code":"@Manual{,   title = {tidyFlowCore: Bringing flowCore to the tidyverse},   author = {Timothy J Keyes},   year = {2024},   url = {http://www.bioconductor.org/packages/tidyFlowCore},   note = {https://github.com/keyes-timothy/tidyflowCore/tidyFlowCore - R package version 0.99.1},   doi = {10.18129/B9.bioc.tidyFlowCore}, }"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"tidyflowcore","dir":"","previous_headings":"","what":"tidyFlowCore: Bringing flowCore to the tidyverse","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"tidyFlowCore R package bridges gap flow cytometry analysis using flowCore Bioconductor package tidy data principles advocated tidyverse. provides suite dplyr-, ggplot2-, tidyr-like verbs specifically designed working flowFrame flowSet objects tibbles; however, data remain flowCore flowFrames flowSets layer abstraction. Using approach, tidyFlowCore enables intuitive streamlined analysis workflows can leverage Bioconductor tidyverse ecosystems cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"installation-instructions","dir":"","previous_headings":"","what":"Installation instructions","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"Get latest stable R release CRAN. install tidyFlowCore Bioconductor using following code: development version GitHub :","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"tidyFlowCore\") BiocManager::install(\"keyes-timothy/tidyFlowCore\")"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"tidyFlowCore allows treat flowCore data structures like tidy data.frames tibbles implementing dplyr, tidyr, ggplot2 verbs can deployed directly flowFrame flowSet S4 classes. section, give brief example tidyFlowCore can enable data analysis pipeline use useful functions flowCore package many functions dplyr, tidyr, ggplot2 packages.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"load-required-packages","dir":"","previous_headings":"Example","what":"Load required packages","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"","code":"library(tidyFlowCore) library(flowCore)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"read-data","dir":"","previous_headings":"Example","what":"Read data","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"","code":"# read data from the HDCytoData package bcr_flowset <- HDCytoData::Bodenmiller_BCR_XL_flowSet() #> see ?HDCytoData and browseVignettes('HDCytoData') for documentation #> loading from cache"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"data-transformation","dir":"","previous_headings":"Example","what":"Data transformation","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"flowCore package natively supports multiple types data preprocessing transformations cytometry data use tranform class. example, want apply standard arcsinh transformation often used CyTOF data current dataset, use following code: Alternatively, can also use tidyverse’s functional programming paradigm perform transformation. , use mutate-across framework via tidyFlowCore:","code":"asinh_transformation <- flowCore::arcsinhTransform(a = 0, b = 1/5, c = 0) transformation_list <-    flowCore::transformList(     colnames(bcr_flowset),      asinh_transformation   )  transformed_bcr_flowset <- flowCore::transform(bcr_flowset, transformation_list) transformed_bcr_flowset <-    bcr_flowset |>   dplyr::mutate(across(-ends_with(\"_id\"), \\(.x) asinh(.x / 5)))"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"cell-type-counting","dir":"","previous_headings":"Example","what":"Cell type counting","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"Suppose ’re interested counting number cells belong cell type (encoded population_id column bcr_flowset) dataset. Using standard flowCore functions, perform calculation steps: tidyFlowCore allows us perform operation simply using dplyr package’s count function: tidyFlowCore also makes easy perform counting broken variables metadata:","code":"# extract all expression matrices from our flowSet  combined_matrix <- flowCore::fsApply(bcr_flowset, exprs)  # take out the concatenated population_id column  combined_population_id <- combined_matrix[, 'population_id']  # perform the calculation table(combined_population_id) #> combined_population_id #>     1     2     3     4     5     6     7     8  #>  3265  6651 62890 51150  1980 18436 24518  3901 bcr_flowset |>    dplyr::count(population_id) #> # A tibble: 8 × 2 #>   population_id     n #>           <dbl> <int> #> 1             1  3265 #> 2             2  6651 #> 3             3 62890 #> 4             4 51150 #> 5             5  1980 #> 6             6 18436 #> 7             7 24518 #> 8             8  3901 bcr_flowset |>    # use the .tidyFlowCore_identifier pronoun to access the name of    # each experiment in the flowSet    dplyr::count(.tidyFlowCore_identifier, population_id) #> # A tibble: 128 × 3 #>    .tidyFlowCore_identifier           population_id     n #>    <chr>                                      <dbl> <int> #>  1 PBMC8_30min_patient1_BCR-XL.fcs                1    31 #>  2 PBMC8_30min_patient1_BCR-XL.fcs                2   112 #>  3 PBMC8_30min_patient1_BCR-XL.fcs                3   761 #>  4 PBMC8_30min_patient1_BCR-XL.fcs                4  1307 #>  5 PBMC8_30min_patient1_BCR-XL.fcs                5     5 #>  6 PBMC8_30min_patient1_BCR-XL.fcs                6   127 #>  7 PBMC8_30min_patient1_BCR-XL.fcs                7   444 #>  8 PBMC8_30min_patient1_BCR-XL.fcs                8    51 #>  9 PBMC8_30min_patient1_Reference.fcs             1    52 #> 10 PBMC8_30min_patient1_Reference.fcs             2   132 #> # ℹ 118 more rows"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"nesting-and-unnesting","dir":"","previous_headings":"Example","what":"Nesting and unnesting","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"flowFrame flowSet data objects clear relationship one another flowCore API - essentially nested flowFrames. words, flowSets made multiple flowFrames! tidyFlowCore provides useful API converting flowSet flowFrame data structures various degrees nesting using group/nest ungroup/unnest verbs. Note dplyr tidyr APIs, group/nest ungroup/unnest synonyms (grouped data.frames different nested data.frames). However, flowFrames flowSets structured, tidyFlowCore’s group/nest ungroup/unnest functions identical behavior, respectively.","code":"# unnesting a flowSet results in a flowFrame with an additional column,  # 'tidyFlowCore_name` that identifies cells based on which experiment in the  # original flowSet they come from bcr_flowset |>    dplyr::ungroup() #> flowFrame object 'filea2b057adc326' #> with 172791 cells and 40 observables: #>                    name               desc     range  minRange  maxRange #> $P1                Time               Time   2399633    0.0000   2399632 #> $P2         Cell_length        Cell_length        69    0.0000        68 #> $P3      CD3(110:114)Dd     CD3(110:114)Dd      9383  -61.6796      9382 #> $P4       CD45(In115)Dd      CD45(In115)Dd      5035    0.0000      5034 #> $P5        BC1(La139)Dd       BC1(La139)Dd     14306 -100.8797     14305 #> ...                 ...                ...       ...       ...       ... #> $P36           group_id           group_id         3         0         2 #> $P37         patient_id         patient_id         9         0         8 #> $P38          sample_id          sample_id        17         0        16 #> $P39      population_id      population_id         9         0         8 #> $P40 .tidyFlowCore_name .tidyFlowCore_name        17         0        16 #> 297 keywords are stored in the 'description' slot # flowSets can be unnested and renested for various analyses bcr_flowset |>    dplyr::ungroup() |>    # group_by cell type   dplyr::group_by(population_id) |>    # calculate the mean HLA-DR expression of each cell population   dplyr::summarize(mean_expression = mean(`HLA-DR(Yb174)Dd`)) |>    dplyr::select(population_id, mean_expression) #> # A tibble: 8 × 2 #>   population_id mean_expression #>           <dbl>           <dbl> #> 1             3            3.67 #> 2             7            3.33 #> 3             4            4.33 #> 4             2           87.1  #> 5             6           88.2  #> 6             8            3.12 #> 7             1           51.4  #> 8             5           18.0"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"plotting","dir":"","previous_headings":"Example","what":"Plotting","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"tidyFlowCore also provides direct interface ggplot2 flowFrame flowSet data objects. example…","code":"library(ggplot2) bcr_flowset |>    dplyr::mutate(across(-ends_with(\"_id\"), \\(.x) asinh(.x / 5))) |>    ggplot(aes(x = `CD45(In115)Dd`, y = `CD4(Nd145)Dd`)) +    geom_point(size = 0.1, alpha = 0.1) +   facet_wrap(facets = vars(population_id))"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"citation output using citation('tidyFlowCore') R. Please run check updates cite tidyFlowCore. Please note tidyFlowCore made possible thanks many R bioinformatics software authors, cited either vignettes /paper(s) describing package.","code":"print(citation('tidyFlowCore'), bibtex = TRUE) #> To cite package 'tidyFlowCore' in publications use: #>  #>   Keyes TJ (2024). _tidyFlowCore: Bringing flowCore to the tidyverse_. #>   doi:10.18129/B9.bioc.tidyFlowCore #>   <https://doi.org/10.18129/B9.bioc.tidyFlowCore>, #>   https://github.com/keyes-timothy/tidyflowCore/tidyFlowCore - R #>   package version 0.99.0, #>   <http://www.bioconductor.org/packages/tidyFlowCore>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {tidyFlowCore: Bringing flowCore to the tidyverse}, #>     author = {Timothy J Keyes}, #>     year = {2024}, #>     url = {http://www.bioconductor.org/packages/tidyFlowCore}, #>     note = {https://github.com/keyes-timothy/tidyflowCore/tidyFlowCore - R package version 0.99.0}, #>     doi = {10.18129/B9.bioc.tidyFlowCore}, #>   }"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"Please note tidyFlowCore project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"development-tools","dir":"","previous_headings":"","what":"Development tools","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"Continuous code testing possible thanks GitHub actions usethis, remotes, rcmdcheck customized use Bioconductor’s docker containers BiocCheck. Code coverage assessment possible thanks codecov covr. documentation website automatically updated thanks pkgdown. code styled automatically thanks styler. documentation formatted thanks devtools roxygen2. details, check dev directory. package developed using biocthis.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Order rows using column values — arrange.flowFrame","title":"Order rows using column values — arrange.flowFrame","text":"Order rows using column values","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order rows using column values — arrange.flowFrame","text":"","code":"# S3 method for flowFrame arrange(.data, ..., .by_group = FALSE)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order rows using column values — arrange.flowFrame","text":".data flowFrame ... Variables, functions variables, arrange . .by_group Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order rows using column values — arrange.flowFrame","text":"object type .data. output following properties: * rows appear output, (usually) different place. * Columns modified. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Order rows using column values — arrange.flowFrame","text":"","code":"my_flowframe <- simulate_cytometry_data()$flowframe   my_flowframe |>    dplyr::arrange(feature_1) #> flowFrame object 'V1' #> with 100 cells and 10 observables: #>            name       desc     range  minRange  maxRange #> $P1   feature_1  feature_1       101         0       100 #> $P2   feature_2  feature_2       101         0       100 #> $P3   feature_3  feature_3       100         0        99 #> $P4   feature_4  feature_4       101         0       100 #> $P5   feature_5  feature_5       101         0       100 #> $P6   feature_6  feature_6       101         0       100 #> $P7   feature_7  feature_7       100         0        99 #> $P8   feature_8  feature_8        99         0        98 #> $P9   feature_9  feature_9       100         0        99 #> $P10 feature_10 feature_10       101         0       100 #> 88 keywords are stored in the 'description' slot"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Order rows using column values — arrange.flowSet","title":"Order rows using column values — arrange.flowSet","text":"Order rows using column values","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order rows using column values — arrange.flowSet","text":"","code":"# S3 method for flowSet arrange(.data, ..., .by_group = FALSE)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order rows using column values — arrange.flowSet","text":".data flowSet ... Variables, functions variables, arrange . .by_group Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order rows using column values — arrange.flowSet","text":"object type .data. output following properties: * rows appear output, (usually) different place. * Columns modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Order rows using column values — arrange.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   dplyr::arrange(feature_1) #> A flowSet with 5 experiments. #>  #> column names(10): feature_1 feature_2 ... feature_9 feature_10 #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowFrame — as_flowFrame","title":"Coerce an object into a flowFrame — as_flowFrame","text":"Coerce object flowFrame Coerce data.frame, tbl_df, tof_tbl flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"as_flowFrame(x, ...)  # S3 method for tof_tbl as_flowFrame(x, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowFrame — as_flowFrame","text":"x data.frame, tbl_df, tof_tbl. ... Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowFrame — as_flowFrame","text":"flowFrame flowFrame. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowSet — as_flowSet","title":"Coerce an object into a flowSet — as_flowSet","text":"Coerce object flowSet Coerce tof_tbl flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"as_flowSet(x, ...)  # S3 method for tof_tbl as_flowSet(x, group_cols, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowSet — as_flowSet","text":"x tof_tbl. ... Unused. group_cols Unquoted names columns `x` used group cells separate flowFrames. Supports tidyselect helpers. Defaults NULL (cells written single flowFrame). Note metadata column name \"name\" special value flowSet) class, `group_cols` refers column named \"name,\" error thrown.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowSet — as_flowSet","text":"flowSet flowSet cells grouped constituent flowFrames based values `group_cols`. `group_cols` specified, flowFrame returned instead. Note non-numeric columns removed.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a tibble-flowCore abstraction (a `tof_tbl`) — as_tof_tbl.flowSet","title":"Convert an object into a tibble-flowCore abstraction (a `tof_tbl`) — as_tof_tbl.flowSet","text":"Convert object tibble-flowCore abstraction (`tof_tbl`)","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a tibble-flowCore abstraction (a `tof_tbl`) — as_tof_tbl.flowSet","text":"","code":"# S3 method for flowSet as_tof_tbl(   flow_data,   .name_method = c(\"tidyFlowCore\", \"featureNames\", \"colnames\"),   sep = \"|\",   ...,   include_metadata = FALSE,   include_tidyFlowCore_identifier = FALSE )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a tibble-flowCore abstraction (a `tof_tbl`) — as_tof_tbl.flowSet","text":"flow_data FlowSet .name_method string indicating tidyFlowCore extract column names output tof_tbl `flow_data`. Available options \"tidyFlowCore\" (default), uses tidyFlowCore's internal heuristic name columns; \"featureNames\", uses featureNames name columns; \"colnames\", uses colnames name columns. sep string use separate antigen name associated channel name column names output tibble. Defaults \"|\". ... Currently unused. include_metadata boolean value indicating metadata .fcs file read flowCore (stored pData) merged final result. Defaults FALSE. include_tidyFlowCore_identifier boolean value indicating tidyFlowCore's internal identifier flowFrame flowSet included output tof_tbl result. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object into a tibble-flowCore abstraction (a `tof_tbl`) — as_tof_tbl.flowSet","text":"cytometry-specialized tibble called `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce flowFrames or flowSets into tibbles. — as_tof_tbl","title":"Coerce flowFrames or flowSets into tibbles. — as_tof_tbl","text":"Coerce flowFrames flowSets tibbles.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce flowFrames or flowSets into tibbles. — as_tof_tbl","text":"","code":"as_tof_tbl(   flow_data,   .name_method = c(\"tidyFlowCore\", \"featureNames\", \"colnames\"),   sep = \"|\",   ... )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce flowFrames or flowSets into tibbles. — as_tof_tbl","text":"flow_data flowFrame flowSet .name_method string indicating tidyFlowCore extract column names `flow_data`. Available options \"tidyFlowCore\" (default), uses tidyFlowCore's internal heuristic name columns; \"featureNames\", uses featureNames name columns; \"colnames\", uses colnames name columns. Note , cases, \"featureNames\" \"colnames\" give identical results. sep string indicating symbol used separate antigen names channel names columns output tof_tbl .name_method = 'tidyFlowCore'. ... Optional method-specific arguments.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce flowFrames or flowSets into tibbles. — as_tof_tbl","text":"cytometry-specialized tibble called `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce flowFrames or flowSets into tibbles. — as_tof_tbl","text":"","code":"input_file <- system.file(\"extdata\", \"0877408774.B08\", package=\"flowCore\")  input_flowframe <- flowCore::read.FCS(input_file)  tof_tibble <- as_tof_tbl(input_flowframe)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the observations in each group. — count.flowFrame","title":"Count the observations in each group. — count.flowFrame","text":"Count observations group.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the observations in each group. — count.flowFrame","text":"","code":"# S3 method for flowFrame count(x, ..., wt = NULL, sort = FALSE, name = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the observations in each group. — count.flowFrame","text":"x flowFrame ... Variables group , named according featureNames wt NULL (default), counts number rows group. variable, computes sum(wt) group. sort TRUE, show largest groups top. name omitted, default n. already column called n, use nn. column called n nn, 'll use nnn, , adding ns gets new name.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the observations in each group. — count.flowFrame","text":"data.frame containing groupwise counts.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count the observations in each group. — count.flowFrame","text":"","code":"my_flowframe <-   simulate_cytometry_data()$flowframe |>     dplyr::mutate(       random_group =         sample(           c(\"a\", \"b\"),           size = nrow(simulate_cytometry_data()$flowframe),           replace = TRUE         )     )   my_flowframe |>    dplyr::count(random_group) #> # A tibble: 2 × 2 #>   random_group     n #>          <dbl> <int> #> 1            1    40 #> 2            2    60"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the observations in each group. — count.flowSet","title":"Count the observations in each group. — count.flowSet","text":"Count observations group.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the observations in each group. — count.flowSet","text":"","code":"# S3 method for flowSet count(x, ..., wt = NULL, sort = FALSE, name = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the observations in each group. — count.flowSet","text":"x flowSet ... Variables group , named according featureNames columns flowSet's pData wt NULL (default), counts number rows group. variable, computes sum(wt) group. sort TRUE, show largest groups top. name omitted, default n. already column called n, use nn. column called n nn, 'll use nnn, , adding ns gets new name.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the observations in each group. — count.flowSet","text":"data.frame containing groupwise counts. columns specified `...`, grouping performed experiment flowSet. Otherwise, columns specified `...` used grouping.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count the observations in each group. — count.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   dplyr::count() #> # A tibble: 5 × 2 #>   .tidyFlowCore_identifier     n #>   <chr>                    <int> #> 1 V1                         100 #> 2 V2                         100 #> 3 V3                         100 #> 4 V4                         100 #> 5 V5                         100  my_flowset |>   dplyr::count(cell_type) #> # A tibble: 2 × 2 #>   cell_type        n #>   <chr>        <int> #> 1 population_a   300 #> 2 population_b   200"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep rows that match a condition. — filter.flowFrame","title":"Keep rows that match a condition. — filter.flowFrame","text":"Keep rows match condition.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep rows that match a condition. — filter.flowFrame","text":"","code":"# S3 method for flowFrame filter(.data, ..., .by = NULL, .preserve = FALSE)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep rows that match a condition. — filter.flowFrame","text":".data flowFrame ... Expressions return logical value, defined terms variables featureNames .data. multiple expressions included, combined & operator. rows conditions evaluate TRUE kept. .Optionally, selection columns group just operation, functioning alternative group_by(). .preserve Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep rows that match a condition. — filter.flowFrame","text":"object type .data. output following properties: * Rows subset input, appear order. * Columns modified. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep rows that match a condition. — filter.flowFrame","text":"","code":"my_flowframe <- simulate_cytometry_data()$flowframe   my_flowframe |>    dplyr::filter(feature_1 > 50) #> flowFrame object 'V1' #> with 42 cells and 10 observables: #>            name       desc     range  minRange  maxRange #> $P1   feature_1  feature_1       101         0       100 #> $P2   feature_2  feature_2       100         0        99 #> $P3   feature_3  feature_3        97         0        96 #> $P4   feature_4  feature_4       101         0       100 #> $P5   feature_5  feature_5       101         0       100 #> $P6   feature_6  feature_6        99         0        98 #> $P7   feature_7  feature_7        93         0        92 #> $P8   feature_8  feature_8        99         0        98 #> $P9   feature_9  feature_9        98         0        97 #> $P10 feature_10 feature_10        99         0        98 #> 88 keywords are stored in the 'description' slot"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep rows that match a condition. — filter.flowSet","title":"Keep rows that match a condition. — filter.flowSet","text":"Keep rows match condition.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep rows that match a condition. — filter.flowSet","text":"","code":"# S3 method for flowSet filter(.data, ..., .by = NULL, .preserve = FALSE)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep rows that match a condition. — filter.flowSet","text":".data flowSet ... Expressions return logical value, defined terms variables featureNames flowFrames .data. multiple expressions included, combined & operator. rows conditions evaluate TRUE kept. .Optionally, selection columns group just operation, functioning alternative group_by(). .preserve Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep rows that match a condition. — filter.flowSet","text":"object type .data. output following properties: * Rows subset input, appear order. * Columns modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep rows that match a condition. — filter.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   dplyr::filter(feature_1 > 50) #> A flowSet with 5 experiments. #>  #> column names(10): feature_1 feature_2 ... feature_9 feature_10 #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new ggplot. — ggplot.flowFrame","title":"Create a new ggplot. — ggplot.flowFrame","text":"Create new ggplot.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new ggplot. — ggplot.flowFrame","text":"","code":"# S3 method for flowFrame ggplot(   data = NULL,   mapping = ggplot2::aes(),   ...,   environment = parent.frame() )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new ggplot. — ggplot.flowFrame","text":"data Default dataset use plot form flowFrame. specified, must supplied  layer added plot. mapping Default list aesthetic mappings use plot. specified, must supplied layer added plot. Note variable names used aesthetic mappings come featureNames input flowFrame. ... arguments passed methods. currently used. environment Deprecated. Used prior tidy evaluation.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new ggplot. — ggplot.flowFrame","text":"ggplot","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new ggplot. — ggplot.flowFrame","text":"","code":"simulations <- simulate_cytometry_data() test_flowframe <- simulations$flowframe  flowframe_plot <-   test_flowframe |>   ggplot2::ggplot(ggplot2::aes(x = feature_1, y = feature_2)) +   ggplot2::geom_point()"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new ggplot. — ggplot.flowSet","title":"Create a new ggplot. — ggplot.flowSet","text":"Create new ggplot.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new ggplot. — ggplot.flowSet","text":"","code":"# S3 method for flowSet ggplot(   data = NULL,   mapping = ggplot2::aes(),   ...,   environment = parent.frame() )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new ggplot. — ggplot.flowSet","text":"data Default dataset use plot form flowSet. specified, must supplied  layer added plot. Note metadata stored  pData merged underlying  flowCore-tibble abstraction thus available plotting. mapping Default list aesthetic mappings use plot. specified, must supplied layer added plot. Note variable names used aesthetic mappings come featureNames input flowSet's constituent flowFrames. ... arguments passed methods. currently used. environment Deprecated. Used prior tidy evaluation.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new ggplot. — ggplot.flowSet","text":"ggplot","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new ggplot. — ggplot.flowSet","text":"","code":"simulations <- simulate_cytometry_data() test_flowset <- simulations$flowset  flowset_plot <-   test_flowset |>   ggplot2::ggplot(ggplot2::aes(x = feature_1, y = feature_2)) +   ggplot2::geom_point()  flowset_plot_with_metadata <-   test_flowset |>   # note that `patient` below comes from the flowSet's metadata (pData)   ggplot2::ggplot(ggplot2::aes(x = feature_1, y = feature_2, color = patient)) +   ggplot2::geom_point()"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/group_by.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Group a flowFrame into a flowSet using one or more variables. — group_by.flowFrame","title":"Group a flowFrame into a flowSet using one or more variables. — group_by.flowFrame","text":"Group flowFrame flowSet using one variables.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/group_by.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group a flowFrame into a flowSet using one or more variables. — group_by.flowFrame","text":"","code":"# S3 method for flowFrame group_by(.data, ..., .add = FALSE, .drop = dplyr::group_by_drop_default(.data))"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/group_by.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group a flowFrame into a flowSet using one or more variables. — group_by.flowFrame","text":".data flowFrame ... Unquoted variables columns group according .data's featureNames. .add Unused. .drop Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/group_by.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group a flowFrame into a flowSet using one or more variables. — group_by.flowFrame","text":"flowSet containing one flowFrame unique combinations columns selected .... Metadata grouping columns stored output flowSet's pData.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/group_by.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group a flowFrame into a flowSet using one or more variables. — group_by.flowFrame","text":"","code":"my_flowframe <-   simulate_cytometry_data()$flowframe |>     dplyr::mutate(       random_group =         sample(           c(\"a\", \"b\"),           size = nrow(simulate_cytometry_data()$flowframe),           replace = TRUE         )     )   my_flowframe |>    dplyr::group_by(random_group) #> A flowSet with 2 experiments. #>  #> column names(10): feature_1 feature_2 ... feature_9 feature_10 #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/make_flowcore_annotated_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"Make AnnotatedDataFrame needed flowFrame class","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/make_flowcore_annotated_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"make_flowcore_annotated_data_frame(maxes_and_mins)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/make_flowcore_annotated_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"maxes_and_mins data.frame containing information max min values channel saved flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/make_flowcore_annotated_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"AnnotatedDataFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/make_flowcore_annotated_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/metal_masterlist.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector of CyTOF metal name patterns supported by tidyFlowCore — metal_masterlist","title":"A character vector of CyTOF metal name patterns supported by tidyFlowCore — metal_masterlist","text":"character vector used `tof_find_panel_info` detect parse CyTOF metals correspond channel input .fcs file.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/metal_masterlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector of CyTOF metal name patterns supported by tidyFlowCore — metal_masterlist","text":"","code":"data(metal_masterlist)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/metal_masterlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A character vector of CyTOF metal name patterns supported by tidyFlowCore — metal_masterlist","text":"character vector entry pattern tidyFlowCore searches every CyTOF channel input .fcs files. patterns amalgamate example .fcs files sampled studies linked .","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/metal_masterlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A character vector of CyTOF metal name patterns supported by tidyFlowCore — metal_masterlist","text":"https://github.com/kara-davis-lab/DDPR https://cytobank.org/nolanlab/reports/Levine2015.html https://cytobank.org/nolanlab/reports/Spitzer2015.html https://cytobank.org/nolanlab/reports/Spitzer2017.html https://community.cytobank.org/cytobank/projects/609","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/metal_masterlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector of CyTOF metal name patterns supported by tidyFlowCore — metal_masterlist","text":"None","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Create, modify, and delete columns. — mutate.flowFrame","title":"Create, modify, and delete columns. — mutate.flowFrame","text":"Create, modify, delete columns.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create, modify, and delete columns. — mutate.flowFrame","text":"","code":"# S3 method for flowFrame mutate(.data, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create, modify, and delete columns. — mutate.flowFrame","text":".data flowFrame ... Name-value pairs. name (left side equals sign) gives name column output. right side equation performs computations using names channel according  featureNames. Supports tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create, modify, and delete columns. — mutate.flowFrame","text":"flowFrame. output following properties: * Columns .data preserved according .keep argument. * Existing columns modified ... always returned original location. * New columns created ... placed according ..arguments. * number rows affected. * Columns given value NULL removed.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create, modify, and delete columns. — mutate.flowFrame","text":"","code":"my_flowframe <-   simulate_cytometry_data()$flowframe |>     dplyr::mutate(       random_group =         sample(           c(\"a\", \"b\"),           size = nrow(simulate_cytometry_data()$flowframe),           replace = TRUE         )     )   my_flowframe |>    dplyr::mutate(new_feature = feature_1 + feature_2) #> flowFrame object 'V1' #> with 100 cells and 12 observables: #>              name         desc     range  minRange  maxRange #> $P1     feature_1    feature_1       101         0       100 #> $P2     feature_2    feature_2       100         0        99 #> $P3     feature_3    feature_3       101         0       100 #> $P4     feature_4    feature_4       101         0       100 #> $P5     feature_5    feature_5       101         0       100 #> ...           ...          ...       ...       ...       ... #> $P8     feature_8    feature_8        98         0        97 #> $P9     feature_9    feature_9       100         0        99 #> $P10   feature_10   feature_10       100         0        99 #> $P11 random_group random_group         3         0         2 #> $P12  new_feature  new_feature       198         0       197 #> 102 keywords are stored in the 'description' slot"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create, modify, and delete columns. — mutate.flowSet","title":"Create, modify, and delete columns. — mutate.flowSet","text":"Create, modify, delete columns.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create, modify, and delete columns. — mutate.flowSet","text":"","code":"# S3 method for flowSet mutate(.data, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create, modify, and delete columns. — mutate.flowSet","text":".data flowSet ... Name-value pairs. name (left side equals sign) gives name column output. right side equation performs computations using names channel according  featureNames. Supports tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create, modify, and delete columns. — mutate.flowSet","text":"flowSet. output following properties: * Columns .data preserved according .keep argument. * Existing columns modified ... always returned original location. * New columns created ... placed according ..arguments. * number rows affected. * Columns given value NULL removed.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create, modify, and delete columns. — mutate.flowSet","text":"","code":"my_flowset <-   simulate_cytometry_data()$flowset  my_flowset |>   dplyr::mutate(new_feature = feature_1 + feature_2) #> A flowSet with 5 experiments. #>  #> column names(11): feature_1 feature_2 ... feature_10 new_feature #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/nest.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Nest a flowFrame into a flowSet — nest.flowFrame","title":"Nest a flowFrame into a flowSet — nest.flowFrame","text":"Nest flowFrame flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/nest.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nest a flowFrame into a flowSet — nest.flowFrame","text":"","code":"# S3 method for flowFrame nest(.data, ..., .by = NULL, .key = NULL, .names_sep = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/nest.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nest a flowFrame into a flowSet — nest.flowFrame","text":".data flowFrame ... Columns nest; appear inner flowFrames comprising output flowSet. Specified using name-variable pairs form new_col = c(col1, col2, col3). right hand side can valid tidyselect expression. supplied, ... derived columns selected .. .Columns nest ; stored pData output flowSet. .can used place conjunction columns supplied .... supplied, .derived columns selected .... .key Unused. .names_sep Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/nest.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nest a flowFrame into a flowSet — nest.flowFrame","text":"flowSet wherein cells grouped constituent flowFrames based columns used nest.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/nest.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nest a flowFrame into a flowSet — nest.flowFrame","text":"","code":"my_flowframe <-   simulate_cytometry_data()$flowframe |>   dplyr::mutate(     random_group =       sample(         c(\"a\", \"b\"),         size = nrow(simulate_cytometry_data()$flowframe),         replace = TRUE       )   ) my_flowframe |>   tidyr::nest(.by = random_group) #> A flowSet with 2 experiments. #>  #> column names(10): feature_1 feature_2 ... feature_9 feature_10 #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/new_tof_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_tibble. — new_tof_tibble","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"Constructor tof_tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/new_tof_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"","code":"new_tof_tibble(x = dplyr::tibble(), panel = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/new_tof_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"x data.frame tibble containing single-cell mass cytometry data rows cells columns CyTOF measurements. panel data.frame tibble containing information panel mass cytometry data x.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/new_tof_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"`tof_tbl`, tibble extension tracks attributes useful CyTOF data analysis.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a single column. — pull.flowFrame","title":"Extract a single column. — pull.flowFrame","text":"pull() similar $. mostly useful looks little nicer pipes.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a single column. — pull.flowFrame","text":"","code":"# S3 method for flowFrame pull(.data, var = -1, name = NULL, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a single column. — pull.flowFrame","text":".data flowFrame. var variable specified : * literal variable name * positive integer, giving position counting left * negative integer, giving position counting right. name optional parameter specifies column used names named vector. Specified similar manner var. ... use methods.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a single column. — pull.flowFrame","text":"vector size .data.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a single column. — pull.flowFrame","text":"","code":"my_flowframe <- simulate_cytometry_data()$flowframe   my_flowframe |>    dplyr::pull(feature_1) #>   [1] 20.648935 63.303005 70.050774 53.005867 66.655724 64.047829 27.355886 #>   [8]  5.490736 37.310413 78.034470 15.957017 45.452126 42.853611 27.112152 #>  [15] 49.034760 87.483971 65.565163 92.555740 79.439484 27.588352 56.409615 #>  [22] 92.973183 93.744850  9.163841 67.738861 42.103306 41.801208 90.113327 #>  [29] 97.319702 39.528194  8.772243 47.921066 80.070045 61.109413 12.481791 #>  [36] 75.397644  4.612498 61.320526  2.047465 52.206711 23.714315 58.911583 #>  [43] 91.727608 15.903027 97.227531 42.265381 97.799255 78.570625 40.033646 #>  [50] 88.210114 15.459453 66.401497 68.943169 57.255486 35.932823 98.874733 #>  [57]  7.664884 64.414917 18.191687 85.908806 28.854046 98.159660  2.235729 #>  [64] 10.810736 84.079285 40.095047 89.011887 96.432709 54.091339 15.115402 #>  [71] 83.707336  1.495027 13.733397  5.369581 14.545731 16.658072 59.614033 #>  [78] 90.506859 35.660660 42.914162 13.146553  7.976927 51.834496 94.653320 #>  [85] 51.723930 73.538689 32.461868 32.472141 76.520462 16.967514 99.348076 #>  [92] 21.094311 38.642769 85.625511 36.075798 65.986588 31.417198 72.551811 #>  [99] 40.809181 41.961121 #> attr(,\"ranges\") #>  [1] 100  99 100 100  98  97  98  99  97 100"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a single column. — pull.flowSet","title":"Extract a single column. — pull.flowSet","text":"pull() similar $. mostly useful looks little nicer pipes.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a single column. — pull.flowSet","text":"","code":"# S3 method for flowSet pull(.data, var = -1, name = NULL, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a single column. — pull.flowSet","text":".data flowSet. var variable specified : * literal variable name * positive integer, giving position counting left * negative integer, giving position counting right. name optional parameter specifies column used names named vector. Specified similar manner var. ... use methods.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a single column. — pull.flowSet","text":"vector size .data.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a single column. — pull.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   dplyr::pull(feature_1) #>   [1] 61.707455 34.119282 59.080372 14.357096 18.683359 28.300123 26.117453 #>   [8] 44.449272 38.673580 63.016792 31.684309 87.855576 69.205734 30.698961 #>  [15] 51.781757 86.819008 97.816093  9.822252 45.549061 28.500546 36.499210 #>  [22] 33.048340  6.381599 13.402617 71.336746 19.456774 38.641743 90.418785 #>  [29] 27.241653 12.216655  6.067490 64.539589 29.932425 61.931160 58.472397 #>  [36] 70.772652 30.505514 80.818390 15.074034 50.172340 37.925339 26.619347 #>  [43] 49.425632 33.082298 35.069328 70.757950 38.462761 10.113583  2.865905 #>  [50] 77.229843 82.937546 30.931627 94.737907 47.313133 89.927170 68.210777 #>  [57] 66.090851 94.839485 46.942699 13.229156 63.323696 72.619804 31.290648 #>  [64]  6.216064 69.836235 35.853497 53.557339 43.119762 40.035126 29.605131 #>  [71] 67.159821 45.693851 42.280628 13.132191 45.609444 84.077194  7.578098 #>  [78] 58.188179  1.811911 26.028854 67.378952 69.370819 28.405432 75.756714 #>  [85] 93.963539 64.369308 62.781277 55.980293 27.328022 67.027916 83.328835 #>  [92] 23.091105 23.602583 84.348320 44.097603 77.150414 44.741596 58.190331 #>  [99] 34.493801 99.710922 33.006531 47.791954 12.564268 98.742432 90.464310 #> [106] 20.021053 40.619736  2.266216 96.763039 76.373138 25.745275 81.329163 #> [113] 69.410637 84.645256 27.006809 20.357967 84.754402 82.448799 68.781677 #> [120] 20.211300 29.066751 42.892139  3.948269 50.238373 12.217365 32.680260 #> [127] 92.086449 56.190342 19.754028 10.083920 89.921082 84.699974 99.674049 #> [134]  9.414564  3.009351 37.756927  2.864956 10.252385 67.314972 84.476952 #> [141] 23.850948 66.323471 73.407471  8.697383 97.507378 85.777184 26.460798 #> [148] 61.820202 49.950996 64.218086 97.341896 32.600330 82.427696 75.553398 #> [155] 69.653275 28.611916 24.235460 50.880432 63.473274 16.829134 47.191879 #> [162] 18.123425 36.343666 99.167946 18.804047  1.982403 82.661331 15.953116 #> [169] 99.615807 70.997238 28.466055 57.196651 55.851486 60.589451 83.170029 #> [176] 75.700905  5.344547 50.358284 42.900902 36.867908 82.145706 37.138206 #> [183]  4.242621 24.201389 74.853386 54.048607 73.312218 92.513481 23.744755 #> [190] 38.866402 38.110310 48.320808 78.019508 42.356594 68.189659 74.915016 #> [197] 41.884460 49.094273 87.558945 25.735926 36.365288  5.922872 61.308781 #> [204] 26.465258 31.810114 52.487389 82.538628 16.346321 66.785576 26.689190 #> [211]  5.489400  5.032824 67.269638 28.314075 33.710968 99.893837 21.679636 #> [218] 97.783920  1.866883 19.009169 81.188911 99.234215 31.320633 91.801727 #> [225] 96.015106 12.971904 49.463345 10.458075 57.531628 70.147476 23.554527 #> [232] 99.567863 45.367165 98.406105 74.924225 41.873249 88.397713 90.523972 #> [239] 30.814005 60.329502 14.250608 23.792261 36.124817 63.888958 37.332664 #> [246] 23.126255 25.453268 11.435163 72.185493 73.003159 25.668699 26.509863 #> [253] 95.728455 61.931454 36.764408 91.227051 19.563534  9.292298 73.945923 #> [260] 63.645992 72.100403 76.697975 56.386959 90.748619 17.660521 22.610464 #> [267] 39.004974 52.041439 92.219429 62.898712  7.488976 90.163910 43.584831 #> [274] 43.308949 85.289520 96.272324  8.329326 37.922577 87.437645 66.909683 #> [281] 72.147575 92.156715 19.393478 10.080259 30.100101 84.175858 55.696720 #> [288] 41.264561 23.697992  6.342371 61.778408 37.440243 13.837901 91.879967 #> [295] 60.309593 45.373196 60.354004 46.483398 31.169651 23.295162 35.510174 #> [302] 20.752729 34.824009 68.756203  7.128444 80.510178 22.588404 10.920882 #> [309] 14.054218 91.553108 35.466141 97.699463 47.731918 85.576248 45.518295 #> [316] 46.367805 79.221535 61.005947 58.888496 84.570694 12.221233 80.542961 #> [323] 17.883633 88.563187 50.315392 49.812355  7.533211 66.269035 42.017410 #> [330] 60.651508 62.986748 49.933147 79.900414 32.696560 99.102669  7.525240 #> [337] 82.545715 13.127794 19.310791 17.615723 99.708282 30.322037 44.368580 #> [344] 79.598541 55.893726 53.959942 24.569088 31.550964 78.584114 21.957214 #> [351] 91.689651 32.906090 30.089802 45.082386 68.709763 74.692329 57.719582 #> [358] 60.983780 89.814507 27.718576 51.264126 89.373863 82.801422 49.625317 #> [365] 81.275536 57.579636 84.994072  9.707760 29.938971 38.805950 32.500252 #> [372] 93.898849 79.210831 68.465767 80.449013 41.406265 88.109421 92.497643 #> [379] 64.615356 42.431854 73.853249 89.430756 94.570671 41.664360 50.146286 #> [386] 94.381531 98.491859 36.046940 71.204071 22.269993 54.878727 59.093906 #> [393] 95.828644 34.489147 99.420250 11.157582 45.028820 37.352917 29.985207 #> [400] 91.810173 32.258129 74.513344 66.143280 80.621674 13.403547 76.548698 #> [407] 68.554260 25.323996 31.040577 61.443665 38.186352 90.578568  1.214871 #> [414] 29.693474 19.395399 53.242836 13.453709 78.778549 80.463600 43.188396 #> [421] 97.303215 49.149731 28.197092  6.960131 87.616333 87.138443 40.876072 #> [428] 35.336155 45.194172 84.746315 39.487431 28.629562 24.266279 95.897026 #> [435] 65.168503 15.620442 84.926056 45.034714 47.356552 45.265106 87.612732 #> [442] 18.249874  6.438751 67.594566 97.489983 38.292480  9.587608 59.194534 #> [449] 90.231888 19.204515 32.671204 86.970772  3.973670 72.650047  6.516009 #> [456] 82.070892 98.118423 65.601418 56.348289 65.594025 34.990654 63.329815 #> [463] 24.079998 34.264496  3.429126 66.663910  7.221761 10.633113 13.827549 #> [470] 51.814659 77.645760 79.575882 22.183260 95.123260 76.492737 63.214848 #> [477] 23.108370 16.135563 59.606712 21.058344  6.556801 21.220430 70.348221 #> [484] 75.046036 97.183609 83.815903 63.871738 79.120323 54.547138 36.281818 #> [491]  3.342771 63.082649 15.826059 16.139669 63.726826 42.420887 19.835138 #> [498] 89.223190 22.774603  6.207536"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. rlang :=, .data","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"See documentation object's original package.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"# See examples in each object's original package NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename columns in a flowFrame — rename.flowFrame","title":"Rename columns in a flowFrame — rename.flowFrame","text":"Rename columns flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename columns in a flowFrame — rename.flowFrame","text":"","code":"# S3 method for flowFrame rename(.data, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename columns in a flowFrame — rename.flowFrame","text":".data flowFrame ... Unquoted name-value pairs (specified featureNames). Use new_name = old_name rename selected columns","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename columns in a flowFrame — rename.flowFrame","text":"object type .data. output following properties: * Rows affected. * Column names changed; column order preserved. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename columns in a flowFrame — rename.flowFrame","text":"","code":"my_flowframe <- simulate_cytometry_data()$flowframe   my_flowframe |>    dplyr::rename(new_feature = feature_1) #> flowFrame object 'V1' #> with 100 cells and 10 observables: #>             name        desc     range  minRange  maxRange #> $P1  new_feature new_feature       101         0       100 #> $P2    feature_2   feature_2       101         0       100 #> $P3    feature_3   feature_3       100         0        99 #> $P4    feature_4   feature_4        99         0        98 #> $P5    feature_5   feature_5        99         0        98 #> $P6    feature_6   feature_6       100         0        99 #> $P7    feature_7   feature_7       101         0       100 #> $P8    feature_8   feature_8       101         0       100 #> $P9    feature_9   feature_9       100         0        99 #> $P10  feature_10  feature_10       101         0       100 #> 88 keywords are stored in the 'description' slot"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename columns in a flowSet — rename.flowSet","title":"Rename columns in a flowSet — rename.flowSet","text":"Rename columns flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename columns in a flowSet — rename.flowSet","text":"","code":"# S3 method for flowSet rename(.data, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename columns in a flowSet — rename.flowSet","text":".data flowSet ... Unquoted name-value pairs (specified featureNames flowFrames making flowSet). Use new_name = old_name rename selected columns","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename columns in a flowSet — rename.flowSet","text":"object type .data. output following properties: * Rows affected. * Column names changed; column order preserved. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename columns in a flowSet — rename.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   dplyr::rename(new_feature = feature_1) #> A flowSet with 5 experiments. #>  #> column names(10): new_feature feature_2 ... feature_9 feature_10 #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename columns in a flowFrame — rename_with.flowFrame","title":"Rename columns in a flowFrame — rename_with.flowFrame","text":"Rename columns flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename columns in a flowFrame — rename_with.flowFrame","text":"","code":"# S3 method for flowFrame rename_with(.data, .fn, .cols = dplyr::everything(), ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename columns in a flowFrame — rename_with.flowFrame","text":".data flowFrame .fn function used transform selected .cols. return character vector length input. .cols Unquoted column names indicating columns rename (specified featureNames). ... Additional arguments passed onto .fn.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename columns in a flowFrame — rename_with.flowFrame","text":"object type .data. output following properties: * Rows affected. * Column names changed; column order preserved. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename columns in a flowFrame — rename_with.flowFrame","text":"","code":"my_flowframe <- simulate_cytometry_data()$flowframe   my_flowframe |>    dplyr::rename_with(.fn = toupper) #> flowFrame object 'V1' #> with 100 cells and 10 observables: #>            name       desc     range  minRange  maxRange #> $P1   FEATURE_1  FEATURE_1       100         0        99 #> $P2   FEATURE_2  FEATURE_2       101         0       100 #> $P3   FEATURE_3  FEATURE_3       100         0        99 #> $P4   FEATURE_4  FEATURE_4       101         0       100 #> $P5   FEATURE_5  FEATURE_5        97         0        96 #> $P6   FEATURE_6  FEATURE_6        98         0        97 #> $P7   FEATURE_7  FEATURE_7       101         0       100 #> $P8   FEATURE_8  FEATURE_8        97         0        96 #> $P9   FEATURE_9  FEATURE_9       101         0       100 #> $P10 FEATURE_10 FEATURE_10       101         0       100 #> 88 keywords are stored in the 'description' slot"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename columns in a flowSet — rename_with.flowSet","title":"Rename columns in a flowSet — rename_with.flowSet","text":"Rename columns flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename columns in a flowSet — rename_with.flowSet","text":"","code":"# S3 method for flowSet rename_with(.data, .fn, .cols = dplyr::everything(), ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename columns in a flowSet — rename_with.flowSet","text":".data flowSet .fn function used transform selected .cols. return character vector length input. .cols Unquoted column names indicating columns rename (specified featureNames flowFrames making flowSet). ... Additional arguments passed onto .fn.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename columns in a flowSet — rename_with.flowSet","text":"object type .data. output following properties: * Rows affected. * Column names changed; column order preserved. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename columns in a flowSet — rename_with.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   dplyr::rename_with(.fn = toupper) #> A flowSet with 5 experiments. #>  #> column names(10): FEATURE_1 FEATURE_2 ... FEATURE_9 FEATURE_10 #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep or drop columns using their names and types. — select.flowFrame","title":"Keep or drop columns using their names and types. — select.flowFrame","text":"Keep drop columns using names types.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep or drop columns using their names and types. — select.flowFrame","text":"","code":"# S3 method for flowFrame select(.data, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep or drop columns using their names and types. — select.flowFrame","text":".data flowFrame ... One unquoted expressions separated commas. Variables names (specified featureNames) can used positions flowFrame). Supports tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep or drop columns using their names and types. — select.flowFrame","text":"flowFrame. output following properties: * Rows affected. * Output columns subset input columns, potentially different order. Columns renamed new_name = old_name form used. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep or drop columns using their names and types. — select.flowFrame","text":"","code":"my_flowframe <- simulate_cytometry_data()$flowframe   my_flowframe |>    dplyr::select(feature_1) #> flowFrame object 'V1' #> with 100 cells and 1 observables: #>          name      desc     range  minRange  maxRange #> $P1 feature_1 feature_1       101         0       100 #> 25 keywords are stored in the 'description' slot"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep or drop columns using their names and types. — select.flowSet","title":"Keep or drop columns using their names and types. — select.flowSet","text":"Keep drop columns using names types.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep or drop columns using their names and types. — select.flowSet","text":"","code":"# S3 method for flowSet select(.data, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep or drop columns using their names and types. — select.flowSet","text":".data flowSet ... One unquoted expressions separated commas. Variables names (specified featureNames component flowFrames make flowSet) can used positions flowSet). Supports tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep or drop columns using their names and types. — select.flowSet","text":"flowSet. output following properties: * Rows affected. * Output columns subset input columns, potentially different order. Columns renamed new_name = old_name form used. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep or drop columns using their names and types. — select.flowSet","text":"","code":"my_flowset <-   simulate_cytometry_data()$flowset  my_flowset |>   dplyr::select(feature_1) #> A flowSet with 5 experiments. #>  #> column names(1): feature_1 #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/simulate_cytometry_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Cytometry Data for FlowSet and FlowFrame Analysis — simulate_cytometry_data","title":"Simulate Cytometry Data for FlowSet and FlowFrame Analysis — simulate_cytometry_data","text":"Simulate Cytometry Data FlowSet FlowFrame Analysis","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/simulate_cytometry_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Cytometry Data for FlowSet and FlowFrame Analysis — simulate_cytometry_data","text":"","code":"simulate_cytometry_data(num_cells = 100, num_features = 10, num_flowframes = 5)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/simulate_cytometry_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Cytometry Data for FlowSet and FlowFrame Analysis — simulate_cytometry_data","text":"num_cells integer indicating number cells simulate. num_features integer indicating many features simulate. num_flowframes integer indicating many flowFrames simulate simulated flowSet.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/simulate_cytometry_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Cytometry Data for FlowSet and FlowFrame Analysis — simulate_cytometry_data","text":"list containing two entries: flowFrame flowSet.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/simulate_cytometry_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Cytometry Data for FlowSet and FlowFrame Analysis — simulate_cytometry_data","text":"","code":"simulate_cytometry_data() #> $flowframe #> flowFrame object 'V1' #> with 100 cells and 10 observables: #>            name       desc     range  minRange  maxRange #> $P1   feature_1  FEATURE_1       101         0       100 #> $P2   feature_2  FEATURE_2       100         0        99 #> $P3   feature_3  FEATURE_3       101         0       100 #> $P4   feature_4  FEATURE_4       101         0       100 #> $P5   feature_5  FEATURE_5        95         0        94 #> $P6   feature_6  FEATURE_6       101         0       100 #> $P7   feature_7  FEATURE_7       101         0       100 #> $P8   feature_8  FEATURE_8       101         0       100 #> $P9   feature_9  FEATURE_9       101         0       100 #> $P10 feature_10 FEATURE_10       101         0       100 #> 87 keywords are stored in the 'description' slot #>  #> $flowset #> A flowSet with 5 experiments. #>  #> column names(10): feature_1 feature_2 ... feature_9 feature_10 #>  #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows using their positions — slice.flowFrame","title":"Subset rows using their positions — slice.flowFrame","text":"Subset rows using positions","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows using their positions — slice.flowFrame","text":"","code":"# S3 method for flowFrame slice(.data, ..., .by = NULL, .preserve = FALSE)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows using their positions — slice.flowFrame","text":".data flowFrame ... Integer row values (keep). .Optionally, unquoted selection columns group just operation. alternative group_by. .preserve Currently unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows using their positions — slice.flowFrame","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset rows using their positions — slice.flowFrame","text":"","code":"my_flowframe <- simulate_cytometry_data()$flowframe   my_flowframe |>    dplyr::slice(1) #> flowFrame object 'V1' #> with 1 cells and 10 observables: #>            name       desc     range  minRange  maxRange #> $P1   feature_1  feature_1        75         0        74 #> $P2   feature_2  feature_2        84         0        83 #> $P3   feature_3  feature_3        43         0        42 #> $P4   feature_4  feature_4        48         0        47 #> $P5   feature_5  feature_5        76         0        75 #> $P6   feature_6  feature_6        51         0        50 #> $P7   feature_7  feature_7        18         0        17 #> $P8   feature_8  feature_8        62         0        61 #> $P9   feature_9  feature_9       101         0       100 #> $P10 feature_10 feature_10        99         0        98 #> 88 keywords are stored in the 'description' slot"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows using their positions — slice.flowSet","title":"Subset rows using their positions — slice.flowSet","text":"Subset rows using positions","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows using their positions — slice.flowSet","text":"","code":"# S3 method for flowSet slice(.data, ..., .by = NULL, .preserve = FALSE)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows using their positions — slice.flowSet","text":".data flowSet ... Integer row values (keep). .Optionally, unquoted selection columns group just operation. alternative group_by. .preserve Currently unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows using their positions — slice.flowSet","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset rows using their positions — slice.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   dplyr::slice(1) #> A flowSet with 5 experiments. #>  #> column names(10): feature_1 feature_2 ... feature_9 feature_10 #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows at the head of a data structure. — slice_head.flowFrame","title":"Subset rows at the head of a data structure. — slice_head.flowFrame","text":"Subset rows head data structure.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows at the head of a data structure. — slice_head.flowFrame","text":"","code":"# S3 method for flowFrame slice_head(.data, ..., n, prop, by = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows at the head of a data structure. — slice_head.flowFrame","text":".data flowFrame ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows at the head of a data structure. — slice_head.flowFrame","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset rows at the head of a data structure. — slice_head.flowFrame","text":"","code":"my_flowframe <- simulate_cytometry_data()$flowframe   my_flowframe |>    dplyr::slice_head(n = 5) #> flowFrame object 'V1' #> with 5 cells and 10 observables: #>            name       desc     range  minRange  maxRange #> $P1   feature_1  feature_1        84         0        83 #> $P2   feature_2  feature_2        84         0        83 #> $P3   feature_3  feature_3       100         0        99 #> $P4   feature_4  feature_4        82         0        81 #> $P5   feature_5  feature_5       100         0        99 #> $P6   feature_6  feature_6        95         0        94 #> $P7   feature_7  feature_7        78         0        77 #> $P8   feature_8  feature_8        98         0        97 #> $P9   feature_9  feature_9        97         0        96 #> $P10 feature_10 feature_10        93         0        92 #> 88 keywords are stored in the 'description' slot"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows at the head of a data structure. — slice_head.flowSet","title":"Subset rows at the head of a data structure. — slice_head.flowSet","text":"Subset rows head data structure.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows at the head of a data structure. — slice_head.flowSet","text":"","code":"# S3 method for flowSet slice_head(.data, ..., n, prop, by = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows at the head of a data structure. — slice_head.flowSet","text":".data flowSet ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows at the head of a data structure. — slice_head.flowSet","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset rows at the head of a data structure. — slice_head.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   dplyr::slice_head(n = 10) #> A flowSet with 5 experiments. #>  #> column names(10): feature_1 feature_2 ... feature_9 feature_10 #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows of a data structure in order. — slice_max.flowFrame","title":"Subset rows of a data structure in order. — slice_max.flowFrame","text":"Subset rows data structure order.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows of a data structure in order. — slice_max.flowFrame","text":"","code":"# S3 method for flowFrame slice_max(   .data,   order_by,   ...,   n,   prop,   by = NULL,   with_ties = TRUE,   na_rm = FALSE )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows of a data structure in order. — slice_max.flowFrame","text":".data flowFrame order_by Variable function variables order . order multiple variables, wrap data frame tibble. ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by. with_ties ties kept together? default, TRUE, may return rows request. Use FALSE ignore ties, return first n rows. na_rm missing values order_by removed result? FALSE, NA values sorted end included insufficient non-missing values reach n/prop.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows of a data structure in order. — slice_max.flowFrame","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset rows of a data structure in order. — slice_max.flowFrame","text":"","code":"my_flowframe <- simulate_cytometry_data()$flowframe   my_flowframe |>    dplyr::slice_max(order_by = feature_1, n = 5) #> flowFrame object 'V1' #> with 5 cells and 10 observables: #>            name       desc     range  minRange  maxRange #> $P1   feature_1  feature_1        99         0        98 #> $P2   feature_2  feature_2        54         0        53 #> $P3   feature_3  feature_3        88         0        87 #> $P4   feature_4  feature_4        74         0        73 #> $P5   feature_5  feature_5        98         0        97 #> $P6   feature_6  feature_6        88         0        87 #> $P7   feature_7  feature_7        88         0        87 #> $P8   feature_8  feature_8        97         0        96 #> $P9   feature_9  feature_9        92         0        91 #> $P10 feature_10 feature_10       100         0        99 #> 88 keywords are stored in the 'description' slot"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows of a data structure in order. — slice_max.flowSet","title":"Subset rows of a data structure in order. — slice_max.flowSet","text":"Subset rows data structure order.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows of a data structure in order. — slice_max.flowSet","text":"","code":"# S3 method for flowSet slice_max(   .data,   order_by,   ...,   n,   prop,   by = NULL,   with_ties = TRUE,   na_rm = FALSE )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows of a data structure in order. — slice_max.flowSet","text":".data flowSet order_by Variable function variables order . order multiple variables, wrap data frame tibble. ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by. with_ties ties kept together? default, TRUE, may return rows request. Use FALSE ignore ties, return first n rows. na_rm missing values order_by removed result? FALSE, NA values sorted end included insufficient non-missing values reach n/prop.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows of a data structure in order. — slice_max.flowSet","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset rows of a data structure in order. — slice_max.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   dplyr::slice_max(order_by = feature_1, n = 10) #> A flowSet with 5 experiments. #>  #> column names(10): feature_1 feature_2 ... feature_9 feature_10 #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows of a data structure in order. — slice_min.flowFrame","title":"Subset rows of a data structure in order. — slice_min.flowFrame","text":"Subset rows data structure order.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows of a data structure in order. — slice_min.flowFrame","text":"","code":"# S3 method for flowFrame slice_min(   .data,   order_by,   ...,   n,   prop,   by = NULL,   with_ties = TRUE,   na_rm = FALSE )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows of a data structure in order. — slice_min.flowFrame","text":".data flowFrame order_by Variable function variables order . order multiple variables, wrap data frame tibble. ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by. with_ties ties kept together? default, TRUE, may return rows request. Use FALSE ignore ties, return first n rows. na_rm missing values order_by removed result? FALSE, NA values sorted end included insufficient non-missing values reach n/prop.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows of a data structure in order. — slice_min.flowFrame","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset rows of a data structure in order. — slice_min.flowFrame","text":"","code":"my_flowframe <- simulate_cytometry_data()$flowframe   my_flowframe |>    dplyr::slice_min(order_by = feature_1, n = 5) #> flowFrame object 'V1' #> with 5 cells and 10 observables: #>            name       desc     range  minRange  maxRange #> $P1   feature_1  feature_1         8         0         7 #> $P2   feature_2  feature_2        72         0        71 #> $P3   feature_3  feature_3       101         0       100 #> $P4   feature_4  feature_4       101         0       100 #> $P5   feature_5  feature_5        82         0        81 #> $P6   feature_6  feature_6        99         0        98 #> $P7   feature_7  feature_7        93         0        92 #> $P8   feature_8  feature_8        83         0        82 #> $P9   feature_9  feature_9        68         0        67 #> $P10 feature_10 feature_10        93         0        92 #> 88 keywords are stored in the 'description' slot"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows of a data structure in order. — slice_min.flowSet","title":"Subset rows of a data structure in order. — slice_min.flowSet","text":"Subset rows data structure order.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows of a data structure in order. — slice_min.flowSet","text":"","code":"# S3 method for flowSet slice_min(   .data,   order_by,   ...,   n,   prop,   by = NULL,   with_ties = TRUE,   na_rm = FALSE )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows of a data structure in order. — slice_min.flowSet","text":".data flowSet order_by Variable function variables order . order multiple variables, wrap data frame tibble. ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by. with_ties ties kept together? default, TRUE, may return rows request. Use FALSE ignore ties, return first n rows. na_rm missing values order_by removed result? FALSE, NA values sorted end included insufficient non-missing values reach n/prop.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows of a data structure in order. — slice_min.flowSet","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset rows of a data structure in order. — slice_min.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   dplyr::slice_max(order_by = feature_1, n = 10) #> A flowSet with 5 experiments. #>  #> column names(10): feature_1 feature_2 ... feature_9 feature_10 #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows randomly — slice_sample.flowFrame","title":"Subset rows randomly — slice_sample.flowFrame","text":"Subset rows randomly","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows randomly — slice_sample.flowFrame","text":"","code":"# S3 method for flowFrame slice_sample(.data, ..., n, prop, by = NULL, weight_by = NULL, replace = FALSE)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows randomly — slice_sample.flowFrame","text":".data flowFrame ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by. weight_by Sampling weights. must evaluate vector non-negative numbers length input. Weights automatically standardized sum 1. replace sampling performed (TRUE) without (FALSE, default) replacement.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows randomly — slice_sample.flowFrame","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset rows randomly — slice_sample.flowFrame","text":"","code":"my_flowframe <- simulate_cytometry_data()$flowframe   my_flowframe |>    dplyr::slice_sample(n = 5) #> flowFrame object 'V1' #> with 5 cells and 10 observables: #>            name       desc     range  minRange  maxRange #> $P1   feature_1  feature_1        67         0        66 #> $P2   feature_2  feature_2        78         0        77 #> $P3   feature_3  feature_3        95         0        94 #> $P4   feature_4  feature_4        74         0        73 #> $P5   feature_5  feature_5        94         0        93 #> $P6   feature_6  feature_6        72         0        71 #> $P7   feature_7  feature_7       101         0       100 #> $P8   feature_8  feature_8        78         0        77 #> $P9   feature_9  feature_9        87         0        86 #> $P10 feature_10 feature_10        96         0        95 #> 88 keywords are stored in the 'description' slot"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows randomly — slice_sample.flowSet","title":"Subset rows randomly — slice_sample.flowSet","text":"Subset rows randomly","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows randomly — slice_sample.flowSet","text":"","code":"# S3 method for flowSet slice_sample(.data, ..., n, prop, by = NULL, weight_by = NULL, replace = FALSE)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows randomly — slice_sample.flowSet","text":".data flowSet ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by. weight_by Sampling weights. must evaluate vector non-negative numbers length input. Weights automatically standardized sum 1. replace sampling performed (TRUE) without (FALSE, default) replacement.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows randomly — slice_sample.flowSet","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset rows randomly — slice_sample.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   dplyr::slice_sample(n = 10) #> A flowSet with 5 experiments. #>  #> column names(10): feature_1 feature_2 ... feature_9 feature_10 #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows at the tail of a data structure. — slice_tail.flowFrame","title":"Subset rows at the tail of a data structure. — slice_tail.flowFrame","text":"Subset rows tail data structure.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows at the tail of a data structure. — slice_tail.flowFrame","text":"","code":"# S3 method for flowFrame slice_tail(.data, ..., n, prop, by = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows at the tail of a data structure. — slice_tail.flowFrame","text":".data flowFrame ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows at the tail of a data structure. — slice_tail.flowFrame","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset rows at the tail of a data structure. — slice_tail.flowFrame","text":"","code":"my_flowframe <- simulate_cytometry_data()$flowframe   my_flowframe |>    dplyr::slice_tail(n = 5) #> flowFrame object 'V1' #> with 5 cells and 10 observables: #>            name       desc     range  minRange  maxRange #> $P1   feature_1  feature_1        85         0        84 #> $P2   feature_2  feature_2       101         0       100 #> $P3   feature_3  feature_3        78         0        77 #> $P4   feature_4  feature_4        51         0        50 #> $P5   feature_5  feature_5        98         0        97 #> $P6   feature_6  feature_6        60         0        59 #> $P7   feature_7  feature_7        83         0        82 #> $P8   feature_8  feature_8        89         0        88 #> $P9   feature_9  feature_9        49         0        48 #> $P10 feature_10 feature_10        80         0        79 #> 88 keywords are stored in the 'description' slot"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows at the tail of a data structure. — slice_tail.flowSet","title":"Subset rows at the tail of a data structure. — slice_tail.flowSet","text":"Subset rows tail data structure.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows at the tail of a data structure. — slice_tail.flowSet","text":"","code":"# S3 method for flowSet slice_tail(.data, ..., n, prop, by = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows at the tail of a data structure. — slice_tail.flowSet","text":".data flowSet ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows at the tail of a data structure. — slice_tail.flowSet","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset rows at the tail of a data structure. — slice_tail.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   dplyr::slice_tail(n = 10) #> A flowSet with 5 experiments. #>  #> column names(10): feature_1 feature_2 ... feature_9 feature_10 #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a flowFrame. — summarise.flowFrame","title":"Summarize a flowFrame. — summarise.flowFrame","text":"Summarize flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a flowFrame. — summarise.flowFrame","text":"","code":"# S3 method for flowFrame summarise(.data, ..., .by = NULL, .groups = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a flowFrame. — summarise.flowFrame","text":".data .data flowFrame ... Name-value pairs summary functions. name name variable result. .Optionally, selection columns group just operation, functioning alternative group_by(). .groups Grouping structure result. * \"drop_last\": dropping last level grouping. * \"drop\": levels grouping dropped. * \"keep\": grouping structure .data. * \"rowwise\": row group.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a flowFrame. — summarise.flowFrame","text":"data.frame containing summarized result.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a flowFrame. — summarise.flowFrame","text":"","code":"my_flowframe <- simulate_cytometry_data()$flowframe   my_flowframe |>    dplyr::summarise(feature_1_mean = mean(feature_1)) #> # A tibble: 1 × 1 #>   feature_1_mean #>            <dbl> #> 1           49.1"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a flowSet. — summarise.flowSet","title":"Summarize a flowSet. — summarise.flowSet","text":"Summarize flowSet.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a flowSet. — summarise.flowSet","text":"","code":"# S3 method for flowSet summarise(.data, ..., .by = NULL, .groups = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a flowSet. — summarise.flowSet","text":".data .data flowSet ... Name-value pairs summary functions. name name variable result. .Optionally, selection columns group just operation, functioning alternative group_by(). .groups Grouping structure result. * \"drop_last\": dropping last level grouping. * \"drop\": levels grouping dropped. * \"keep\": grouping structure .data. * \"rowwise\": row group.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a flowSet. — summarise.flowSet","text":"data.frame containing summarized result.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a flowSet. — summarise.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   dplyr::summarise(feature_1_mean = mean(feature_1)) #> # A tibble: 5 × 4 #>   feature_1_mean .flowframe_identifier patient   cell_type    #>            <dbl> <chr>                 <chr>     <chr>        #> 1           55.6 V1                    patient_1 population_a #> 2           49.1 V2                    patient_1 population_b #> 3           48.0 V3                    patient_2 population_a #> 4           49.1 V4                    patient_2 population_b #> 5           54.4 V5                    patient_3 population_a"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a flowFrame. — summarize.flowFrame","title":"Summarize a flowFrame. — summarize.flowFrame","text":"Summarize flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a flowFrame. — summarize.flowFrame","text":"","code":"# S3 method for flowFrame summarize(.data, ..., .by = NULL, .groups = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a flowFrame. — summarize.flowFrame","text":".data .data flowFrame ... Name-value pairs summary functions. name name variable result. .Optionally, selection columns group just operation, functioning alternative group_by(). .groups Grouping structure result. * \"drop_last\": dropping last level grouping. * \"drop\": levels grouping dropped. * \"keep\": grouping structure .data. * \"rowwise\": row group.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a flowFrame. — summarize.flowFrame","text":"data.frame containing summarized result.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a flowFrame. — summarize.flowFrame","text":"","code":"my_flowframe <- simulate_cytometry_data()$flowframe   my_flowframe |>    dplyr::summarize(feature_1_mean = mean(feature_1)) #> # A tibble: 1 × 1 #>   feature_1_mean #>            <dbl> #> 1           51.8"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a flowSet. — summarize.flowSet","title":"Summarize a flowSet. — summarize.flowSet","text":"Summarize flowSet.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a flowSet. — summarize.flowSet","text":"","code":"# S3 method for flowSet summarize(.data, ..., .by = NULL, .groups = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a flowSet. — summarize.flowSet","text":".data flowSet ... Name-value pairs summary functions. name name variable result. .Optionally, selection columns group just operation, functioning alternative group_by(). .groups Grouping structure result. * \"drop_last\": dropping last level grouping. * \"drop\": levels grouping dropped. * \"keep\": grouping structure .data. * \"rowwise\": row group.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a flowSet. — summarize.flowSet","text":"data.frame containing summarized result.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a flowSet. — summarize.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   dplyr::summarize(feature_1_mean = mean(feature_1)) #> # A tibble: 5 × 4 #>   feature_1_mean .flowframe_identifier patient   cell_type    #>            <dbl> <chr>                 <chr>     <chr>        #> 1           47.7 V1                    patient_1 population_a #> 2           54.0 V2                    patient_1 population_b #> 3           51.2 V3                    patient_2 population_a #> 4           51.2 V4                    patient_2 population_b #> 5           50.9 V5                    patient_3 population_a"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_find_panel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Use tidyFlowCore's opinionated heuristic for extracting a high-dimensional cytometry panel's channel-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","title":"Use tidyFlowCore's opinionated heuristic for extracting a high-dimensional cytometry panel's channel-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"Using character vectors obtained `name` `desc` columns parameters data flowFrame, infer cytometry panel used collect data return tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_find_panel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use tidyFlowCore's opinionated heuristic for extracting a high-dimensional cytometry panel's channel-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"","code":"tof_find_panel_info(input_flowFrame)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_find_panel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use tidyFlowCore's opinionated heuristic for extracting a high-dimensional cytometry panel's channel-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"input_flowFrame flowFrame (just read .fcs file) high-dimensional cytometry panel extracted","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_find_panel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use tidyFlowCore's opinionated heuristic for extracting a high-dimensional cytometry panel's channel-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"tibble 4 columns (`channels`, `antigens`, `.flowCore_featureNames` `.flowCore_colnames`). first two columns correspond channels antigens high-dimensional cytometry panel used data acquisition, respectively. last two channels represent featureNames colnames attributes used represent channel input flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_get_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get panel information from a tof_tibble — tof_get_panel","title":"Get panel information from a tof_tibble — tof_get_panel","text":"Get panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_get_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"tof_get_panel(tof_tibble)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_get_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tof_tibble `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_get_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tibble containing information CyTOF panel used data acquisition data contained `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_get_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_set_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel information from a tof_tbl — tof_set_panel","title":"Set panel information from a tof_tbl — tof_set_panel","text":"Set panel information tof_tbl","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_set_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel information from a tof_tbl — tof_set_panel","text":"","code":"tof_set_panel(tof_tibble, panel)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_set_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel information from a tof_tbl — tof_set_panel","text":"tof_tibble `tof_tbl`. panel data.frame containing two columns (`channels` `antigens`) representing information panel","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_set_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set panel information from a tof_tbl — tof_set_panel","text":"`tof_tbl` containing information CyTOF panel used data acquisition data contained input `tof_tibble`. Two columns required: \"metals\" \"antigens\".","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_set_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel information from a tof_tbl — tof_set_panel","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Create, modify, and delete columns. — transmute.flowFrame","title":"Create, modify, and delete columns. — transmute.flowFrame","text":"Create, modify, delete columns.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create, modify, and delete columns. — transmute.flowFrame","text":"","code":"# S3 method for flowFrame transmute(.data, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create, modify, and delete columns. — transmute.flowFrame","text":".data flowFrame ... Name-value pairs. name (left side equals sign) gives name column output. right side equation performs computations using names channel according  featureNames. Supports tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create, modify, and delete columns. — transmute.flowFrame","text":"flowFrame. output following properties: * Columns created modified ... returned order specified .... * number rows affected. * Columns given value NULL removed. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create, modify, and delete columns. — transmute.flowFrame","text":"","code":"my_flowframe <- simulate_cytometry_data()$flowframe   my_flowframe |>    dplyr::transmute(new_feature = feature_1 + feature_2) #> flowFrame object 'V1' #> with 100 cells and 1 observables: #>            name        desc     range  minRange  maxRange #> $P1 new_feature new_feature       183         0       182 #> 25 keywords are stored in the 'description' slot"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create, modify, and delete columns. — transmute.flowSet","title":"Create, modify, and delete columns. — transmute.flowSet","text":"Create, modify, delete columns.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create, modify, and delete columns. — transmute.flowSet","text":"","code":"# S3 method for flowSet transmute(.data, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create, modify, and delete columns. — transmute.flowSet","text":".data flowSet ... Name-value pairs. name (left side equals sign) gives name column output. right side equation performs computations using names channel according  featureNames .data's constituent  flowFrames. Supports tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create, modify, and delete columns. — transmute.flowSet","text":"flowSet. output following properties: * Columns created modified ... returned order specified .... * number rows affected. * Columns given value NULL removed. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create, modify, and delete columns. — transmute.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   dplyr::transmute(new_feature = feature_1 + feature_2) #> A flowSet with 5 experiments. #>  #> column names(1): new_feature #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ungroup.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Ungroup a flowSet — ungroup.flowSet","title":"Ungroup a flowSet — ungroup.flowSet","text":"Ungroup flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ungroup.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ungroup a flowSet — ungroup.flowSet","text":"","code":"# S3 method for flowSet ungroup(x, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ungroup.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ungroup a flowSet — ungroup.flowSet","text":"x flowSet ... Variables/columns pData remove grouping. Note \"name\" field flowSet's pData special flowCore, requesting ungrouping name result copied column called \".tidyFlowCore_name\" result. Also note column \".tidytof_unique_identifier\" used internally effect ungrouping.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ungroup.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ungroup a flowSet — ungroup.flowSet","text":"flowFrame flowSet depending degree ungrouping. Note unnest-ing ungrouping flowSet equivalent.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ungroup.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ungroup a flowSet — ungroup.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   dplyr::ungroup() #> flowFrame object 'file17615c028132' #> with 500 cells and 13 observables: #>                    name               desc     range  minRange  maxRange #> $P1           feature_1          feature_1       101         0       100 #> $P2           feature_2          feature_2       101         0       100 #> $P3           feature_3          feature_3       101         0       100 #> $P4           feature_4          feature_4       101         0       100 #> $P5           feature_5          feature_5       101         0       100 #> ...                 ...                ...       ...       ...       ... #> $P9           feature_9          feature_9       101         0       100 #> $P10         feature_10         feature_10       101         0       100 #> $P11            patient            patient         4         0         3 #> $P12          cell_type          cell_type         3         0         2 #> $P13 .tidyFlowCore_name .tidyFlowCore_name         6         0         5 #> 108 keywords are stored in the 'description' slot"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/unnest.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Unnest a flowSet into a single\nflowFrame — unnest.flowSet","title":"Unnest a flowSet into a single\nflowFrame — unnest.flowSet","text":"Unnest flowSet single flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/unnest.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unnest a flowSet into a single\nflowFrame — unnest.flowSet","text":"","code":"# S3 method for flowSet unnest(   data,   cols,   ...,   keep_empty = FALSE,   ptype = NULL,   names_sep = NULL,   names_repair = \"check_unique\" )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/unnest.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unnest a flowSet into a single\nflowFrame — unnest.flowSet","text":"data flowSet cols Columns pData unnest. ... Unused. keep_empty Unused. ptype Unused. names_sep Unused. names_repair Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/unnest.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unnest a flowSet into a single\nflowFrame — unnest.flowSet","text":"flowFrame flowSet depending degree unnest-ing. Note unnest-ing ungrouping flowSet equivalent.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/unnest.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unnest a flowSet into a single\nflowFrame — unnest.flowSet","text":"","code":"my_flowset <- simulate_cytometry_data()$flowset  my_flowset |>   tidyr::unnest(cols = c(patient, cell_type)) #> flowFrame object 'tidyFlowCore_id_1' #> with 500 cells and 13 observables: #>                    name               desc     range  minRange  maxRange #> $P1           feature_1          feature_1       101         0       100 #> $P2           feature_2          feature_2       101         0       100 #> $P3           feature_3          feature_3       101         0       100 #> $P4           feature_4          feature_4       101         0       100 #> $P5           feature_5          feature_5       101         0       100 #> ...                 ...                ...       ...       ...       ... #> $P9           feature_9          feature_9       101         0       100 #> $P10         feature_10         feature_10       101         0       100 #> $P11            patient            patient         4         0         3 #> $P12          cell_type          cell_type         3         0         2 #> $P13 .tidyFlowCore_name .tidyFlowCore_name         6         0         5 #> 110 keywords are stored in the 'description' slot  my_flowset |>   tidyr::unnest(cols = patient) #> A flowSet with 2 experiments. #>  #> column names(12): feature_1 feature_2 ... patient .tidyFlowCore_name #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/news/index.html","id":"tidyflowcore-0991","dir":"Changelog","previous_headings":"","what":"tidyFlowCore 0.99.1","title":"tidyFlowCore 0.99.1","text":"NEW FEATURES Minor patches (remove unnecessary files). SIGNIFICANT USER-VISIBLE CHANGES None","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/news/index.html","id":"tidyflowcore-0990","dir":"Changelog","previous_headings":"","what":"tidyFlowCore 0.99.0","title":"tidyFlowCore 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES Submitted Bioconductor.","code":""}]
