[{"path":"https://keyes-timothy.github.io/tidyFlowCore/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 tidyflowCore authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"install-tidyflowcore","dir":"Articles","previous_headings":"Basics","what":"Install tidyFlowCore","title":"tidyFlowCore","text":"R open-source statistical environment can easily modified enhance functionality via packages. tidyFlowCore R package available via Bioconductor repository packages. R can installed operating system CRAN can install tidyFlowCore using following commands R session:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {       install.packages(\"BiocManager\")   }  BiocManager::install(\"tidyFlowCore\")  ## Check that you have a valid Bioconductor installation BiocManager::valid()"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"required-knowledge","dir":"Articles","previous_headings":"Basics","what":"Required knowledge","title":"tidyFlowCore","text":"tidyFlowCore based many packages particular implemented infrastructure needed dealing RNA-seq data (EDIT!). , packages like SummarizedExperiment (EDIT!). asking question “start using Bioconductor?” might interested blog post.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"asking-for-help","dir":"Articles","previous_headings":"Basics","what":"Asking for help","title":"tidyFlowCore","text":"package developers, try explain clearly use packages order use functions. R Bioconductor steep learning curve critical learn ask help. blog post quoted mentions like highlight Bioconductor support site main resource getting help: remember use tidyFlowCore tag check older posts. alternatives available creating GitHub issues tweeting. However, please note want receive help adhere posting guidelines. particularly critical provide small reproducible example session information package developers can track source error.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"citing-tidyflowcore","dir":"Articles","previous_headings":"Basics","what":"Citing tidyFlowCore","title":"tidyFlowCore","text":"hope tidyFlowCore useful research. Please use following information cite package overall approach. Thank !","code":"## Citation info citation(\"tidyFlowCore\") #> Warning in person1(given = given[[i]], family = family[[i]], middle = #> middle[[i]], : It is recommended to use 'given' instead of 'middle'. #> To cite package 'tidyFlowCore' in publications use: #>  #>   Keyes TJ (2024). _tidyFlowCore: Bringing flowCore to the tidyverse_. #>   doi:10.18129/B9.bioc.tidyFlowCore #>   <https://doi.org/10.18129/B9.bioc.tidyFlowCore>, #>   https://github.com/keyes-timothy/tidyflowCore/tidyFlowCore - R #>   package version 0.99.0, #>   <http://www.bioconductor.org/packages/tidyFlowCore>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {tidyFlowCore: Bringing flowCore to the tidyverse}, #>     author = {Timothy J Keyes}, #>     year = {2024}, #>     url = {http://www.bioconductor.org/packages/tidyFlowCore}, #>     note = {https://github.com/keyes-timothy/tidyflowCore/tidyFlowCore - R package version 0.99.0}, #>     doi = {10.18129/B9.bioc.tidyFlowCore}, #>   }"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"quick-start-to-using-tidyflowcore","dir":"Articles","previous_headings":"","what":"Quick start to using tidyFlowCore","title":"tidyFlowCore","text":"tidyFlowCore allows treat flowCore data structures like tidy data.frames tibbles. implementing dplyr, tidyr, ggplot2 verbs can deployed directly flowFrame flowSet S4 classes. section, give brief example tidyFlowCore can enable data analysis pipeline use useful functions flowCore package many functions dplyr, tidyr, ggplot2 packages.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"load-required-packages","dir":"Articles","previous_headings":"Quick start to using tidyFlowCore","what":"Load required packages","title":"tidyFlowCore","text":"","code":"library(tidyFlowCore) library(flowCore)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"read-data","dir":"Articles","previous_headings":"Quick start to using tidyFlowCore","what":"Read data","title":"tidyFlowCore","text":"","code":"# read data from the HDCytoData package bcr_flowset <- HDCytoData::Bodenmiller_BCR_XL_flowSet() #> see ?HDCytoData and browseVignettes('HDCytoData') for documentation #> downloading 1 resources #> retrieving 1 resource #> loading from cache #> Warning in updateObjectFromSlots(object, ..., verbose = verbose): dropping #> slot(s) 'colnames' from object = 'flowSet'"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"data-transformation","dir":"Articles","previous_headings":"Quick start to using tidyFlowCore","what":"Data transformation","title":"tidyFlowCore","text":"flowCore package natively supports multiple types data preprocessing transformations cytometry data use tranform class. example, want apply standard arcsinh transformation often used CyTOF data current dataset, use following code: Alternatively, can also use tidyverse’s functional programming paradigm perform transformation. , use mutate-across framework via tidyFlowCore:","code":"asinh_transformation <- flowCore::arcsinhTransform(a = 0, b = 1/5, c = 0) transformation_list <-    flowCore::transformList(     colnames(bcr_flowset),      asinh_transformation   )  transformed_bcr_flowset <- flowCore::transform(bcr_flowset, transformation_list) transformed_bcr_flowset <-    bcr_flowset |>   dplyr::mutate(across(-ends_with(\"_id\"), \\(.x) asinh(.x / 5)))"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"cell-type-counting","dir":"Articles","previous_headings":"Quick start to using tidyFlowCore","what":"Cell type counting","title":"tidyFlowCore","text":"Suppose ’re interested counting number cells belong cell type (encoded population_id column bcr_flowset) dataset. Using standard flowCore functions, perform calculation steps: tidyFlowCore allows us perform operation simply using dplyr package’s count function: tidyFlowCore also makes easy perform counting broken variables metadata:","code":"# extract all expression matrices from our flowSet  combined_matrix <- flowCore::fsApply(bcr_flowset, exprs)  # take out the concatenated population_id column  combined_population_id <- combined_matrix[, 'population_id']  # perform the calculation table(combined_population_id) #> combined_population_id #>     1     2     3     4     5     6     7     8  #>  3265  6651 62890 51150  1980 18436 24518  3901 bcr_flowset |>    dplyr::count(population_id) #> # A tibble: 8 × 2 #>   population_id     n #>           <dbl> <int> #> 1             1  3265 #> 2             2  6651 #> 3             3 62890 #> 4             4 51150 #> 5             5  1980 #> 6             6 18436 #> 7             7 24518 #> 8             8  3901 bcr_flowset |>    # use the .tidyFlowCore_identifier pronoun to access the name of    # each experiment in the flowSet    dplyr::count(.tidyFlowCore_identifier, population_id) #> # A tibble: 128 × 3 #>    .tidyFlowCore_identifier           population_id     n #>    <chr>                                      <dbl> <int> #>  1 PBMC8_30min_patient1_BCR-XL.fcs                1    31 #>  2 PBMC8_30min_patient1_BCR-XL.fcs                2   112 #>  3 PBMC8_30min_patient1_BCR-XL.fcs                3   761 #>  4 PBMC8_30min_patient1_BCR-XL.fcs                4  1307 #>  5 PBMC8_30min_patient1_BCR-XL.fcs                5     5 #>  6 PBMC8_30min_patient1_BCR-XL.fcs                6   127 #>  7 PBMC8_30min_patient1_BCR-XL.fcs                7   444 #>  8 PBMC8_30min_patient1_BCR-XL.fcs                8    51 #>  9 PBMC8_30min_patient1_Reference.fcs             1    52 #> 10 PBMC8_30min_patient1_Reference.fcs             2   132 #> # ℹ 118 more rows"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"nesting-and-unnesting","dir":"Articles","previous_headings":"Quick start to using tidyFlowCore","what":"Nesting and unnesting","title":"tidyFlowCore","text":"flowFrame flowSet data objects clear relationship one another flowCore API - essentially nested flowFrames. words, flowSets made multiple flowFrames! tidyFlowCore provides useful API converting flowSet flowFrame data structures various degrees nesting using group/nest ungroup/unnest verbs. Note dplyr tidyr APIs, group/nest ungroup/unnest synonyms (grouped data.frames different nested data.frames). However, flowFrames flowSets structured, tidyFlowCore’s group/nest ungroup/unnest functions identical behavior, respectively.","code":"# unnesting a flowSet results in a flowFrame with an additional column,  # 'tidyFlowCore_name` that identifies cells based on which experiment in the  # original flowSet they come from bcr_flowset |>    dplyr::ungroup() #> flowFrame object 'file8c171ca1bc41' #> with 172791 cells and 40 observables: #>                    name               desc     range  minRange  maxRange #> $P1                Time               Time   2399633    0.0000   2399632 #> $P2         Cell_length        Cell_length        69    0.0000        68 #> $P3      CD3(110:114)Dd     CD3(110:114)Dd      9383  -61.6796      9382 #> $P4       CD45(In115)Dd      CD45(In115)Dd      5035    0.0000      5034 #> $P5        BC1(La139)Dd       BC1(La139)Dd     14306 -100.8797     14305 #> ...                 ...                ...       ...       ...       ... #> $P36           group_id           group_id         3         0         2 #> $P37         patient_id         patient_id         9         0         8 #> $P38          sample_id          sample_id        17         0        16 #> $P39      population_id      population_id         9         0         8 #> $P40 .tidyFlowCore_name .tidyFlowCore_name        17         0        16 #> 297 keywords are stored in the 'description' slot # flowSets can be unnested and renested for various analyses bcr_flowset |>    dplyr::ungroup() |>    # group_by cell type   dplyr::group_by(population_id) |>    # calculate the mean HLA-DR expression of each cell population   dplyr::summarize(mean_expression = mean(`HLA-DR(Yb174)Dd`)) |>    dplyr::select(population_id, mean_expression) #> # A tibble: 8 × 2 #>   population_id mean_expression #>           <dbl>           <dbl> #> 1             3            3.67 #> 2             7            3.33 #> 3             4            4.33 #> 4             2           87.1  #> 5             6           88.2  #> 6             8            3.12 #> 7             1           51.4  #> 8             5           18.0"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"plotting","dir":"Articles","previous_headings":"Quick start to using tidyFlowCore","what":"Plotting","title":"tidyFlowCore","text":"tidyFlowCore also provides direct interface ggplot2 flowFrame flowSet data objects. example…  example can cite package inside vignette: tidyFlowCore (Keyes, 2024)","code":"library(ggplot2) bcr_flowset |>    dplyr::mutate(across(-ends_with(\"_id\"), \\(.x) asinh(.x / 5))) |>    ggplot(aes(x = `CD45(In115)Dd`, y = `CD4(Nd145)Dd`)) +    geom_point(size = 0.1, alpha = 0.1) +   facet_wrap(facets = vars(population_id))"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"reproducibility","dir":"Articles","previous_headings":"","what":"Reproducibility","title":"tidyFlowCore","text":"tidyFlowCore package (Keyes, 2024) made possible thanks : R (R Core Team, 2024) BiocStyle (Oleś, 2023) knitr (Xie, 2023) RefManageR (McLean, 2017) rmarkdown (Allaire, Xie, Dervieux, McPherson, Luraschi, Ushey, Atkins, Wickham, Cheng, Chang, Iannone, 2024) sessioninfo (Wickham, Chang, Flight, Müller, Hester, 2021) testthat (Wickham, 2011) package developed using biocthis. Code creating vignette Date vignette generated. Wallclock time spent generating vignette. R session information.","code":"## Create the vignette library(\"rmarkdown\") system.time(render(\"tidyFlowCore.Rmd\", \"BiocStyle::html_document\"))  ## Extract the R code library(\"knitr\") knit(\"tidyFlowCore.Rmd\", tangle = TRUE) #> [1] \"2024-03-16 07:19:28 UTC\" #> Time difference of 24.521 secs #> ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.3.3 (2024-02-29) #>  os       Ubuntu 22.04.4 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  C.UTF-8 #>  ctype    C.UTF-8 #>  tz       UTC #>  date     2024-03-16 #>  pandoc   3.1.11 @ /opt/hostedtoolcache/pandoc/3.1.11/x64/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package                * version date (UTC) lib source #>  abind                    1.4-5   2016-07-21 [1] RSPM #>  AnnotationDbi            1.64.1  2023-11-03 [1] Bioconductor #>  AnnotationHub          * 3.10.0  2023-10-24 [1] Bioconductor #>  backports                1.4.1   2021-12-13 [1] RSPM #>  bibtex                   0.5.1   2023-01-26 [1] RSPM #>  Biobase                * 2.62.0  2023-10-24 [1] Bioconductor #>  BiocFileCache          * 2.10.1  2023-10-26 [1] Bioconductor #>  BiocGenerics           * 0.48.1  2023-11-01 [1] Bioconductor #>  BiocManager              1.30.22 2023-08-08 [1] RSPM #>  BiocStyle              * 2.30.0  2023-10-24 [1] Bioconductor #>  BiocVersion              3.18.1  2023-11-15 [1] Bioconductor #>  Biostrings               2.70.3  2024-03-13 [1] Bioconduc~ #>  bit                      4.0.5   2022-11-15 [1] RSPM #>  bit64                    4.0.5   2020-08-30 [1] RSPM #>  blob                     1.2.4   2023-03-17 [1] RSPM #>  bookdown                 0.38    2024-03-04 [1] RSPM #>  bslib                    0.6.1   2023-11-28 [1] RSPM #>  cachem                   1.0.8   2023-05-01 [1] RSPM #>  cli                      3.6.2   2023-12-11 [1] RSPM #>  colorspace               2.1-0   2023-01-23 [1] RSPM #>  crayon                   1.5.2   2022-09-29 [1] RSPM #>  curl                     5.2.1   2024-03-01 [1] RSPM #>  cytolib                  2.14.1  2024-01-18 [1] Bioconduc~ #>  DBI                      1.2.2   2024-02-16 [1] RSPM #>  dbplyr                 * 2.4.0   2023-10-26 [1] RSPM #>  DelayedArray             0.28.0  2023-10-24 [1] Bioconductor #>  desc                     1.4.3   2023-12-10 [1] RSPM #>  digest                   0.6.35  2024-03-11 [1] RSPM #>  dplyr                    1.1.4   2023-11-17 [1] RSPM #>  ellipsis                 0.3.2   2021-04-29 [1] RSPM #>  evaluate                 0.23    2023-11-01 [1] RSPM #>  ExperimentHub          * 2.10.0  2023-10-24 [1] Bioconductor #>  fansi                    1.0.6   2023-12-08 [1] RSPM #>  farver                   2.1.1   2022-07-06 [1] RSPM #>  fastmap                  1.1.1   2023-02-24 [1] RSPM #>  filelock                 1.0.3   2023-12-11 [1] RSPM #>  flowCore               * 2.14.1  2024-01-25 [1] Bioconduc~ #>  fs                       1.6.3   2023-07-20 [1] RSPM #>  generics                 0.1.3   2022-07-05 [1] RSPM #>  GenomeInfoDb           * 1.38.7  2024-03-05 [1] Bioconduc~ #>  GenomeInfoDbData         1.2.11  2024-03-16 [1] Bioconductor #>  GenomicRanges          * 1.54.1  2023-10-29 [1] Bioconductor #>  ggplot2                * 3.5.0   2024-02-23 [1] RSPM #>  glue                     1.7.0   2024-01-09 [1] RSPM #>  gtable                   0.3.4   2023-08-21 [1] RSPM #>  HDCytoData             * 1.22.0  2023-10-26 [1] Bioconductor #>  highr                    0.10    2022-12-22 [1] RSPM #>  htmltools                0.5.7   2023-11-03 [1] RSPM #>  httpuv                   1.6.14  2024-01-26 [1] RSPM #>  httr                     1.4.7   2023-08-15 [1] RSPM #>  interactiveDisplayBase   1.40.0  2023-10-24 [1] Bioconductor #>  IRanges                * 2.36.0  2023-10-24 [1] Bioconductor #>  jquerylib                0.1.4   2021-04-26 [1] RSPM #>  jsonlite                 1.8.8   2023-12-04 [1] RSPM #>  KEGGREST                 1.42.0  2023-10-24 [1] Bioconductor #>  knitr                    1.45    2023-10-30 [1] RSPM #>  labeling                 0.4.3   2023-08-29 [1] RSPM #>  later                    1.3.2   2023-12-06 [1] RSPM #>  lattice                  0.22-5  2023-10-24 [3] CRAN (R 4.3.3) #>  lifecycle                1.0.4   2023-11-07 [1] RSPM #>  lubridate                1.9.3   2023-09-27 [1] RSPM #>  magrittr                 2.0.3   2022-03-30 [1] RSPM #>  Matrix                   1.6-5   2024-01-11 [3] CRAN (R 4.3.3) #>  MatrixGenerics         * 1.14.0  2023-10-24 [1] Bioconductor #>  matrixStats            * 1.2.0   2023-12-11 [1] RSPM #>  memoise                  2.0.1   2021-11-26 [1] RSPM #>  mime                     0.12    2021-09-28 [1] RSPM #>  munsell                  0.5.0   2018-06-12 [1] RSPM #>  pillar                   1.9.0   2023-03-22 [1] RSPM #>  pkgconfig                2.0.3   2019-09-22 [1] RSPM #>  pkgdown                  2.0.7   2022-12-14 [1] any (@2.0.7) #>  plyr                     1.8.9   2023-10-02 [1] RSPM #>  png                      0.1-8   2022-11-29 [1] RSPM #>  promises                 1.2.1   2023-08-10 [1] RSPM #>  purrr                    1.0.2   2023-08-10 [1] RSPM #>  R6                       2.5.1   2021-08-19 [1] RSPM #>  ragg                     1.3.0   2024-03-13 [1] RSPM #>  rappdirs                 0.3.3   2021-01-31 [1] RSPM #>  Rcpp                     1.0.12  2024-01-09 [1] RSPM #>  RefManageR             * 1.4.0   2022-09-30 [1] RSPM #>  rlang                    1.1.3   2024-01-10 [1] RSPM #>  rmarkdown                2.26    2024-03-05 [1] RSPM #>  RProtoBufLib             2.14.0  2023-10-24 [1] Bioconductor #>  RSQLite                  2.3.5   2024-01-21 [1] RSPM #>  S4Arrays                 1.2.1   2024-03-04 [1] Bioconduc~ #>  S4Vectors              * 0.40.2  2023-11-23 [1] Bioconduc~ #>  sass                     0.4.8   2023-12-06 [1] RSPM #>  scales                   1.3.0   2023-11-28 [1] RSPM #>  sessioninfo            * 1.2.2   2021-12-06 [1] RSPM #>  shiny                    1.8.0   2023-11-17 [1] RSPM #>  SparseArray              1.2.4   2024-02-11 [1] Bioconduc~ #>  stringi                  1.8.3   2023-12-11 [1] RSPM #>  stringr                  1.5.1   2023-11-14 [1] RSPM #>  SummarizedExperiment   * 1.32.0  2023-10-24 [1] Bioconductor #>  systemfonts              1.0.6   2024-03-07 [1] RSPM #>  textshaping              0.3.7   2023-10-09 [1] RSPM #>  tibble                   3.2.1   2023-03-20 [1] RSPM #>  tidyFlowCore           * 0.99.0  2024-03-16 [1] local #>  tidyr                    1.3.1   2024-01-24 [1] RSPM #>  tidyselect               1.2.1   2024-03-11 [1] RSPM #>  timechange               0.3.0   2024-01-18 [1] RSPM #>  utf8                     1.2.4   2023-10-22 [1] RSPM #>  vctrs                    0.6.5   2023-12-01 [1] RSPM #>  withr                    3.0.0   2024-01-16 [1] RSPM #>  xfun                     0.42    2024-02-08 [1] RSPM #>  xml2                     1.3.6   2023-12-04 [1] RSPM #>  xtable                   1.8-4   2019-04-21 [1] RSPM #>  XVector                  0.42.0  2023-10-24 [1] Bioconductor #>  yaml                     2.3.8   2023-12-11 [1] RSPM #>  zlibbioc                 1.48.2  2024-03-13 [1] Bioconduc~ #>  #>  [1] /home/runner/work/_temp/Library #>  [2] /opt/R/4.3.3/lib/R/site-library #>  [3] /opt/R/4.3.3/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/articles/tidyFlowCore.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"tidyFlowCore","text":"vignette generated using BiocStyle (Oleś, 2023) knitr (Xie, 2023) rmarkdown (Allaire, Xie, Dervieux et al., 2024) running behind scenes. Citations made RefManageR (McLean, 2017). [1] J. Allaire, Y. Xie, C. Dervieux, et al. rmarkdown: Dynamic Documents R. R package version 2.26. 2024. URL: https://github.com/rstudio/rmarkdown. [2] T. J. Keyes. tidyFlowCore: Bringing flowCore tidyverse. https://github.com/keyes-timothy/tidyflowCore/tidyFlowCore - R package version 0.99.0. 2024. DOI: 10.18129/B9.bioc.tidyFlowCore. URL: http://www.bioconductor.org/packages/tidyFlowCore. [3] M. W. McLean. “RefManageR: Import Manage BibTeX BibLaTeX References R”. : Journal Open Source Software (2017). DOI: 10.21105/joss.00338. [4] . Oleś. BiocStyle: Standard styles vignettes Bioconductor documents. R package version 2.30.0. 2023. DOI: 10.18129/B9.bioc.BiocStyle. URL: https://bioconductor.org/packages/BiocStyle. [5] R Core Team. R: Language Environment Statistical Computing. R Foundation Statistical Computing. Vienna, Austria, 2024. URL: https://www.R-project.org/. [6] H. Wickham. “testthat: Get Started Testing”. : R Journal 3 (2011), pp. 5–10. URL: https://journal.r-project.org/archive/2011-1/RJournal_2011-1_Wickham.pdf. [7] H. Wickham, W. Chang, R. Flight, et al. sessioninfo: R Session Information. R package version 1.2.2, https://r-lib.github.io/sessioninfo/. 2021. URL: https://github.com/r-lib/sessioninfo#readme. [8] Y. Xie. knitr: General-Purpose Package Dynamic Report Generation R. R package version 1.45. 2023. URL: https://yihui.org/knitr/.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Timothy Keyes. Maintainer. Kara Davis. Research team head, owner. Garry Nolan. Research team head, owner.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keyes TJ (2024). tidyFlowCore: Bringing flowCore tidyverse. doi:10.18129/B9.bioc.tidyFlowCore, https://github.com/keyes-timothy/tidyflowCore/tidyFlowCore - R package version 0.99.0, http://www.bioconductor.org/packages/tidyFlowCore.","code":"@Manual{,   title = {tidyFlowCore: Bringing flowCore to the tidyverse},   author = {Timothy J Keyes},   year = {2024},   url = {http://www.bioconductor.org/packages/tidyFlowCore},   note = {https://github.com/keyes-timothy/tidyflowCore/tidyFlowCore - R package version 0.99.0},   doi = {10.18129/B9.bioc.tidyFlowCore}, }"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"tidyflowcore","dir":"","previous_headings":"","what":"tidyFlowCore: Bringing flowCore to the tidyverse","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"tidyFlowCore R package bridges gap flow cytometry analysis using flowCore package tidy data principles advocated tidyverse. provides suite dplyr-, ggplot2-, tidyr-like verbs specifically designed working flowFrame flowSet objects tibbles; however, data remain flowCore flowFrames flowSets layer abstraction. Using approach, tidyFlowCore enables intuitive streamlined analysis workflows can leverage Bioconductor tidyverse ecosystems cytometry data.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"installation-instructions","dir":"","previous_headings":"","what":"Installation instructions","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"Get latest stable R release CRAN. install tidyFlowCore Bioconductor using following code: development version GitHub :","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"tidyFlowCore\") BiocManager::install(\"keyes-timothy/tidyFlowCore\")"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"tidyFlowCore allows treat flowCore data structures like tidy data.frames tibbles. implementing dplyr, tidyr, ggplot2 verbs can deployed directly flowFrame flowSet S4 classes. section, give brief example tidyFlowCore can enable data analysis pipeline use useful functions flowCore package many functions dplyr, tidyr, ggplot2 packages.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"load-required-packages","dir":"","previous_headings":"Example","what":"Load required packages","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"","code":"library(tidyFlowCore) library(flowCore)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"read-data","dir":"","previous_headings":"Example","what":"Read data","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"","code":"# read data from the HDCytoData package bcr_flowset <- HDCytoData::Bodenmiller_BCR_XL_flowSet() #> see ?HDCytoData and browseVignettes('HDCytoData') for documentation #> loading from cache"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"data-transformation","dir":"","previous_headings":"Example","what":"Data transformation","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"flowCore package natively supports multiple types data preprocessing transformations cytometry data use tranform class. example, want apply standard arcsinh transformation often used CyTOF data current dataset, use following code: Alternatively, can also use tidyverse’s functional programming paradigm perform transformation. , use mutate-across framework via tidyFlowCore:","code":"asinh_transformation <- flowCore::arcsinhTransform(a = 0, b = 1/5, c = 0) transformation_list <-    flowCore::transformList(     colnames(bcr_flowset),      asinh_transformation   )  transformed_bcr_flowset <- flowCore::transform(bcr_flowset, transformation_list) transformed_bcr_flowset <-    bcr_flowset |>   dplyr::mutate(across(-ends_with(\"_id\"), \\(.x) asinh(.x / 5)))"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"cell-type-counting","dir":"","previous_headings":"Example","what":"Cell type counting","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"Suppose ’re interested counting number cells belong cell type (encoded population_id column bcr_flowset) dataset. Using standard flowCore functions, perform calculation steps: tidyFlowCore allows us perform operation simply using dplyr package’s count function: tidyFlowCore also makes easy perform counting broken variables metadata:","code":"# extract all expression matrices from our flowSet  combined_matrix <- flowCore::fsApply(bcr_flowset, exprs)  # take out the concatenated population_id column  combined_population_id <- combined_matrix[, 'population_id']  # perform the calculation table(combined_population_id) #> combined_population_id #>     1     2     3     4     5     6     7     8  #>  3265  6651 62890 51150  1980 18436 24518  3901 bcr_flowset |>    dplyr::count(population_id) #> # A tibble: 8 × 2 #>   population_id     n #>           <dbl> <int> #> 1             1  3265 #> 2             2  6651 #> 3             3 62890 #> 4             4 51150 #> 5             5  1980 #> 6             6 18436 #> 7             7 24518 #> 8             8  3901 bcr_flowset |>    # use the .tidyFlowCore_identifier pronoun to access the name of    # each experiment in the flowSet    dplyr::count(.tidyFlowCore_identifier, population_id) #> # A tibble: 128 × 3 #>    .tidyFlowCore_identifier           population_id     n #>    <chr>                                      <dbl> <int> #>  1 PBMC8_30min_patient1_BCR-XL.fcs                1    31 #>  2 PBMC8_30min_patient1_BCR-XL.fcs                2   112 #>  3 PBMC8_30min_patient1_BCR-XL.fcs                3   761 #>  4 PBMC8_30min_patient1_BCR-XL.fcs                4  1307 #>  5 PBMC8_30min_patient1_BCR-XL.fcs                5     5 #>  6 PBMC8_30min_patient1_BCR-XL.fcs                6   127 #>  7 PBMC8_30min_patient1_BCR-XL.fcs                7   444 #>  8 PBMC8_30min_patient1_BCR-XL.fcs                8    51 #>  9 PBMC8_30min_patient1_Reference.fcs             1    52 #> 10 PBMC8_30min_patient1_Reference.fcs             2   132 #> # ℹ 118 more rows"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"nesting-and-unnesting","dir":"","previous_headings":"Example","what":"Nesting and unnesting","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"flowFrame flowSet data objects clear relationship one another flowCore API - essentially nested flowFrames. words, flowSets made multiple flowFrames! tidyFlowCore provides useful API converting flowSet flowFrame data structures various degrees nesting using group/nest ungroup/unnest verbs. Note dplyr tidyr APIs, group/nest ungroup/unnest synonyms (grouped data.frames different nested data.frames). However, flowFrames flowSets structured, tidyFlowCore’s group/nest ungroup/unnest functions identical behavior, respectively.","code":"# unnesting a flowSet results in a flowFrame with an additional column,  # 'tidyFlowCore_name` that identifies cells based on which experiment in the  # original flowSet they come from bcr_flowset |>    dplyr::ungroup() #> flowFrame object 'file5b051566b058' #> with 172791 cells and 40 observables: #>                    name               desc     range  minRange  maxRange #> $P1                Time               Time   2399633    0.0000   2399632 #> $P2         Cell_length        Cell_length        69    0.0000        68 #> $P3      CD3(110:114)Dd     CD3(110:114)Dd      9383  -61.6796      9382 #> $P4       CD45(In115)Dd      CD45(In115)Dd      5035    0.0000      5034 #> $P5        BC1(La139)Dd       BC1(La139)Dd     14306 -100.8797     14305 #> ...                 ...                ...       ...       ...       ... #> $P36           group_id           group_id         3         0         2 #> $P37         patient_id         patient_id         9         0         8 #> $P38          sample_id          sample_id        17         0        16 #> $P39      population_id      population_id         9         0         8 #> $P40 .tidyFlowCore_name .tidyFlowCore_name        17         0        16 #> 297 keywords are stored in the 'description' slot # flowSets can be unnested and renested for various analyses bcr_flowset |>    dplyr::ungroup() |>    # group_by cell type   dplyr::group_by(population_id) |>    # calculate the mean HLA-DR expression of each cell population   dplyr::summarize(mean_expression = mean(`HLA-DR(Yb174)Dd`)) |>    dplyr::select(population_id, mean_expression) #> # A tibble: 8 × 2 #>   population_id mean_expression #>           <dbl>           <dbl> #> 1             3            3.67 #> 2             7            3.33 #> 3             4            4.33 #> 4             2           87.1  #> 5             6           88.2  #> 6             8            3.12 #> 7             1           51.4  #> 8             5           18.0"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"plotting","dir":"","previous_headings":"Example","what":"Plotting","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"tidyFlowCore also provides direct interface ggplot2 flowFrame flowSet data objects. example…","code":"library(ggplot2) bcr_flowset |>    dplyr::mutate(across(-ends_with(\"_id\"), \\(.x) asinh(.x / 5))) |>    ggplot(aes(x = `CD45(In115)Dd`, y = `CD4(Nd145)Dd`)) +    geom_point(size = 0.1, alpha = 0.1) +   facet_wrap(facets = vars(population_id))"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"citation output using citation('tidyFlowCore') R. Please run check updates cite tidyFlowCore. Please note tidyFlowCore made possible thanks many R bioinformatics software authors, cited either vignettes /paper(s) describing package.","code":"print(citation('tidyFlowCore'), bibtex = TRUE) #> To cite package 'tidyFlowCore' in publications use: #>  #>   Keyes TJ (2024). _tidyFlowCore: Integrating the flowCore with the #>   tidyverse_. doi:10.18129/B9.bioc.tidyFlowCore #>   <https://doi.org/10.18129/B9.bioc.tidyFlowCore>, #>   https://github.com/keyes-timothy/tidyflowCore/tidyFlowCore - R #>   package version 0.99.0, #>   <http://www.bioconductor.org/packages/tidyFlowCore>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {tidyFlowCore: Integrating the flowCore with the tidyverse}, #>     author = {Timothy J Keyes}, #>     year = {2024}, #>     url = {http://www.bioconductor.org/packages/tidyFlowCore}, #>     note = {https://github.com/keyes-timothy/tidyflowCore/tidyFlowCore - R package version 0.99.0}, #>     doi = {10.18129/B9.bioc.tidyFlowCore}, #>   }"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"Please note tidyFlowCore project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/index.html","id":"development-tools","dir":"","previous_headings":"","what":"Development tools","title":"tidyFlowCore: Bringing flowCore to the tidyverse","text":"Continuous code testing possible thanks GitHub actions usethis, remotes, rcmdcheck customized use Bioconductor’s docker containers BiocCheck. Code coverage assessment possible thanks codecov covr. documentation website automatically updated thanks pkgdown. code styled automatically thanks styler. documentation formatted thanks devtools roxygen2. details, check dev directory. package developed using biocthis.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Order rows using column values — arrange.flowFrame","title":"Order rows using column values — arrange.flowFrame","text":"Order rows using column values","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order rows using column values — arrange.flowFrame","text":"","code":"# S3 method for flowFrame arrange(.data, ..., .by_group = FALSE)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order rows using column values — arrange.flowFrame","text":".data flowFrame ... Variables, functions variables, arrange . .by_group Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order rows using column values — arrange.flowFrame","text":"object type .data. output following properties: * rows appear output, (usually) different place. * Columns modified. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Order rows using column values — arrange.flowSet","title":"Order rows using column values — arrange.flowSet","text":"Order rows using column values","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order rows using column values — arrange.flowSet","text":"","code":"# S3 method for flowSet arrange(.data, ..., .by_group = FALSE)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order rows using column values — arrange.flowSet","text":".data flowSet ... Variables, functions variables, arrange . .by_group Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/arrange.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order rows using column values — arrange.flowSet","text":"object type .data. output following properties: * rows appear output, (usually) different place. * Columns modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowFrame — as_flowFrame","title":"Coerce an object into a flowFrame — as_flowFrame","text":"Coerce object flowFrame Coerce data.frame, tbl_df, tof_tbl flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"as_flowFrame(x, ...)  # S3 method for tof_tbl as_flowFrame(x, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowFrame — as_flowFrame","text":"x data.frame, tbl_df, tof_tbl. ... Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowFrame — as_flowFrame","text":"flowFrame flowFrame. Note non-numeric columns `x` removed.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowFrame — as_flowFrame","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an object into a flowSet — as_flowSet","title":"Coerce an object into a flowSet — as_flowSet","text":"Coerce object flowSet Coerce tof_tbl flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"as_flowSet(x, ...)  # S3 method for tof_tbl as_flowSet(x, group_cols, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an object into a flowSet — as_flowSet","text":"x tof_tbl. ... Unused. group_cols Unquoted names columns `x` used group cells separate flowFrames. Supports tidyselect helpers. Defaults NULL (cells written single flowFrame). Note metadata column name \"name\" special value flowSet) class, `group_cols` refers column named \"name,\" error thrown.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an object into a flowSet — as_flowSet","text":"flowSet flowSet cells grouped constituent flowFrames based values `group_cols`. `group_cols` specified, flowFrame returned instead. Note non-numeric columns removed.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an object into a flowSet — as_flowSet","text":"","code":"NULL #> NULL  NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object into a tibble-flowCore abstraction (a `tof_tbl`) — as_tof_tbl.flowSet","title":"Convert an object into a tibble-flowCore abstraction (a `tof_tbl`) — as_tof_tbl.flowSet","text":"Convert object tibble-flowCore abstraction (`tof_tbl`)","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object into a tibble-flowCore abstraction (a `tof_tbl`) — as_tof_tbl.flowSet","text":"","code":"# S3 method for flowSet as_tof_tbl(   flow_data,   .name_method = c(\"tidyFlowCore\", \"featureNames\", \"colnames\"),   sep = \"|\",   ...,   include_metadata = FALSE,   include_tidyFlowCore_identifier = FALSE )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object into a tibble-flowCore abstraction (a `tof_tbl`) — as_tof_tbl.flowSet","text":"flow_data FlowSet .name_method string indicating tidyFlowCore extract column names output tof_tbl `flow_data`. Available options \"tidyFlowCore\" (default), uses tidyFlowCore's internal heuristic name columns; \"featureNames\", uses featureNames name columns; \"colnames\", uses colnames name columns. sep string use separate antigen name associated channel name column names output tibble. Defaults \"|\". ... Currently unused. include_metadata boolean value indicating metadata .fcs file read flowCore (stored pData) merged final result. Defaults FALSE. include_tidyFlowCore_identifier boolean value indicating tidyFlowCore's internal identifier flowFrame flowSet included output tof_tbl result. Defaults FALSE.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an object into a tibble-flowCore abstraction (a `tof_tbl`) — as_tof_tbl.flowSet","text":"cytometry-specialized tibble called `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce flowFrames or flowSets into tibbles. — as_tof_tbl","title":"Coerce flowFrames or flowSets into tibbles. — as_tof_tbl","text":"Coerce flowFrames flowSets tibbles.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce flowFrames or flowSets into tibbles. — as_tof_tbl","text":"","code":"as_tof_tbl(   flow_data,   .name_method = c(\"tidyFlowCore\", \"featureNames\", \"colnames\"),   sep = \"|\",   ... )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce flowFrames or flowSets into tibbles. — as_tof_tbl","text":"flow_data flowFrame flowSet .name_method string indicating tidyFlowCore extract column names `flow_data`. Available options \"tidyFlowCore\" (default), uses tidyFlowCore's internal heuristic name columns; \"featureNames\", uses featureNames name columns; \"colnames\", uses colnames name columns. Note , cases, \"featureNames\" \"colnames\" give identical results. sep string indicating symbol used separate antigen names channel names columns output tof_tbl .name_method = 'tidyFlowCore'. ... Optional method-specific arguments.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce flowFrames or flowSets into tibbles. — as_tof_tbl","text":"cytometry-specialized tibble called `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/as_tof_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce flowFrames or flowSets into tibbles. — as_tof_tbl","text":"","code":"input_file <- system.file(\"extdata\", \"0877408774.B08\", package=\"flowCore\")  input_flowframe <- flowCore::read.FCS(input_file)  tof_tibble <- as_tof_tbl(input_flowframe)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the observations in each group. — count.flowFrame","title":"Count the observations in each group. — count.flowFrame","text":"Count observations group.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the observations in each group. — count.flowFrame","text":"","code":"# S3 method for flowFrame count(x, ..., wt = NULL, sort = FALSE, name = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the observations in each group. — count.flowFrame","text":"x flowFrame ... Variables group , named according featureNames wt NULL (default), counts number rows group. variable, computes sum(wt) group. sort TRUE, show largest groups top. name omitted, default n. already column called n, use nn. column called n nn, 'll use nnn, , adding ns gets new name.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the observations in each group. — count.flowFrame","text":"data.frame containing groupwise counts.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the observations in each group. — count.flowSet","title":"Count the observations in each group. — count.flowSet","text":"Count observations group.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the observations in each group. — count.flowSet","text":"","code":"# S3 method for flowSet count(x, ..., wt = NULL, sort = FALSE, name = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the observations in each group. — count.flowSet","text":"x flowSet ... Variables group , named according featureNames columns flowSet's pData wt NULL (default), counts number rows group. variable, computes sum(wt) group. sort TRUE, show largest groups top. name omitted, default n. already column called n, use nn. column called n nn, 'll use nnn, , adding ns gets new name.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/count.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the observations in each group. — count.flowSet","text":"data.frame containing groupwise counts. columns specified `...`, grouping performed experiment flowSet. Otherwise, columns specified `...` used grouping.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep rows that match a condition. — filter.flowFrame","title":"Keep rows that match a condition. — filter.flowFrame","text":"Keep rows match condition.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep rows that match a condition. — filter.flowFrame","text":"","code":"# S3 method for flowFrame filter(.data, ..., .by = NULL, .preserve = FALSE)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep rows that match a condition. — filter.flowFrame","text":".data flowFrame ... Expressions return logical value, defined terms variables featureNames .data. multiple expressions included, combined & operator. rows conditions evaluate TRUE kept. .Optionally, selection columns group just operation, functioning alternative group_by(). .preserve Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep rows that match a condition. — filter.flowFrame","text":"object type .data. output following properties: * Rows subset input, appear order. * Columns modified. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep rows that match a condition. — filter.flowSet","title":"Keep rows that match a condition. — filter.flowSet","text":"Keep rows match condition.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep rows that match a condition. — filter.flowSet","text":"","code":"# S3 method for flowSet filter(.data, ..., .by = NULL, .preserve = FALSE)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep rows that match a condition. — filter.flowSet","text":".data flowSet ... Expressions return logical value, defined terms variables featureNames flowFrames .data. multiple expressions included, combined & operator. rows conditions evaluate TRUE kept. .Optionally, selection columns group just operation, functioning alternative group_by(). .preserve Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/filter.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep rows that match a condition. — filter.flowSet","text":"object type .data. output following properties: * Rows subset input, appear order. * Columns modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new ggplot. — ggplot.flowFrame","title":"Create a new ggplot. — ggplot.flowFrame","text":"Create new ggplot.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new ggplot. — ggplot.flowFrame","text":"","code":"# S3 method for flowFrame ggplot(   data = NULL,   mapping = ggplot2::aes(),   ...,   environment = parent.frame() )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new ggplot. — ggplot.flowFrame","text":"data Default dataset use plot form flowFrame. specified, must supplied  layer added plot. mapping Default list aesthetic mappings use plot. specified, must supplied layer added plot. Note variable names used aesthetic mappings come featureNames input flowFrame. ... arguments passed methods. currently used. environment Deprecated. Used prior tidy evaluation.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new ggplot. — ggplot.flowFrame","text":"ggplot","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new ggplot. — ggplot.flowFrame","text":"","code":"simulations <- simulate_cytometry_data() test_flowframe <- simulations$flowframe  flowframe_plot <-   test_flowframe |>   ggplot2::ggplot(ggplot2::aes(x = feature_1, y = feature_2)) +   ggplot2::geom_point()"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new ggplot. — ggplot.flowSet","title":"Create a new ggplot. — ggplot.flowSet","text":"Create new ggplot.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new ggplot. — ggplot.flowSet","text":"","code":"# S3 method for flowSet ggplot(   data = NULL,   mapping = ggplot2::aes(),   ...,   environment = parent.frame() )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new ggplot. — ggplot.flowSet","text":"data Default dataset use plot form flowSet. specified, must supplied  layer added plot. Note metadata stored  pData merged underlying  flowCore-tibble abstraction thus available plotting. mapping Default list aesthetic mappings use plot. specified, must supplied layer added plot. Note variable names used aesthetic mappings come featureNames input flowSet's constituent flowFrames. ... arguments passed methods. currently used. environment Deprecated. Used prior tidy evaluation.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new ggplot. — ggplot.flowSet","text":"ggplot","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ggplot.flowSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new ggplot. — ggplot.flowSet","text":"","code":"simulations <- simulate_cytometry_data() test_flowset <- simulations$flowset  flowset_plot <-   test_flowset |>   ggplot2::ggplot(ggplot2::aes(x = feature_1, y = feature_2)) +   ggplot2::geom_point()  flowset_plot_with_metadata <-   test_flowset |>   # note that `patient` below comes from the flowSet's metadata (pData)   ggplot2::ggplot(ggplot2::aes(x = feature_1, y = feature_2, color = patient)) +   ggplot2::geom_point()"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/group_by.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Group a flowFrame into a flowSet using one or more variables. — group_by.flowFrame","title":"Group a flowFrame into a flowSet using one or more variables. — group_by.flowFrame","text":"Group flowFrame flowSet using one variables.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/group_by.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group a flowFrame into a flowSet using one or more variables. — group_by.flowFrame","text":"","code":"# S3 method for flowFrame group_by(.data, ..., .add = FALSE, .drop = dplyr::group_by_drop_default(.data))"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/group_by.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group a flowFrame into a flowSet using one or more variables. — group_by.flowFrame","text":".data flowFrame ... Unquoted variables columns group according .data's featureNames. .add Unused. .drop Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/group_by.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group a flowFrame into a flowSet using one or more variables. — group_by.flowFrame","text":"flowSet containing one flowFrame unique combinations columns selected .... Metadata grouping columns stored output flowSet's pData.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/make_flowcore_annotated_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"Make AnnotatedDataFrame needed flowFrame class","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/make_flowcore_annotated_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"make_flowcore_annotated_data_frame(maxes_and_mins)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/make_flowcore_annotated_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"maxes_and_mins data.frame containing information max min values channel saved flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/make_flowcore_annotated_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"AnnotatedDataFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/make_flowcore_annotated_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the AnnotatedDataFrame needed for the flowFrame class — make_flowcore_annotated_data_frame","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/metal_masterlist.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector of CyTOF metal name patterns supported by tidyFlowCore — metal_masterlist","title":"A character vector of CyTOF metal name patterns supported by tidyFlowCore — metal_masterlist","text":"character vector used `tof_find_panel_info` detect parse CyTOF metals correspond channel input .fcs file.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/metal_masterlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector of CyTOF metal name patterns supported by tidyFlowCore — metal_masterlist","text":"","code":"data(metal_masterlist)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/metal_masterlist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A character vector of CyTOF metal name patterns supported by tidyFlowCore — metal_masterlist","text":"character vector entry pattern tidyFlowCore searches every CyTOF channel input .fcs files. patterns amalgamate example .fcs files sampled studies linked .","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/metal_masterlist.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A character vector of CyTOF metal name patterns supported by tidyFlowCore — metal_masterlist","text":"https://github.com/kara-davis-lab/DDPR https://cytobank.org/nolanlab/reports/Levine2015.html https://cytobank.org/nolanlab/reports/Spitzer2015.html https://cytobank.org/nolanlab/reports/Spitzer2017.html https://community.cytobank.org/cytobank/projects/609","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/metal_masterlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector of CyTOF metal name patterns supported by tidyFlowCore — metal_masterlist","text":"None","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Create, modify, and delete columns. — mutate.flowFrame","title":"Create, modify, and delete columns. — mutate.flowFrame","text":"Create, modify, delete columns.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create, modify, and delete columns. — mutate.flowFrame","text":"","code":"# S3 method for flowFrame mutate(.data, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create, modify, and delete columns. — mutate.flowFrame","text":".data flowFrame ... Name-value pairs. name (left side equals sign) gives name column output. right side equation performs computations using names channel according  featureNames. Supports tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create, modify, and delete columns. — mutate.flowFrame","text":"flowFrame. output following properties: * Columns .data preserved according .keep argument. * Existing columns modified ... always returned original location. * New columns created ... placed according ..arguments. * number rows affected. * Columns given value NULL removed.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create, modify, and delete columns. — mutate.flowSet","title":"Create, modify, and delete columns. — mutate.flowSet","text":"Create, modify, delete columns.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create, modify, and delete columns. — mutate.flowSet","text":"","code":"# S3 method for flowSet mutate(.data, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create, modify, and delete columns. — mutate.flowSet","text":".data flowSet ... Name-value pairs. name (left side equals sign) gives name column output. right side equation performs computations using names channel according  featureNames. Supports tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/mutate.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create, modify, and delete columns. — mutate.flowSet","text":"flowSet. output following properties: * Columns .data preserved according .keep argument. * Existing columns modified ... always returned original location. * New columns created ... placed according ..arguments. * number rows affected. * Columns given value NULL removed.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/nest.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Nest a flowFrame into a flowSet — nest.flowFrame","title":"Nest a flowFrame into a flowSet — nest.flowFrame","text":"Nest flowFrame flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/nest.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nest a flowFrame into a flowSet — nest.flowFrame","text":"","code":"# S3 method for flowFrame nest(.data, ..., .by = NULL, .key = NULL, .names_sep = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/nest.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nest a flowFrame into a flowSet — nest.flowFrame","text":".data flowFrame ... Columns nest; appear inner flowFrames comprising output flowSet. Specified using name-variable pairs form new_col = c(col1, col2, col3). right hand side can valid tidyselect expression. supplied, ... derived columns selected .. .Columns nest ; stored pData output flowSet. .can used place conjunction columns supplied .... supplied, .derived columns selected .... .key Unused. .names_sep Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/nest.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nest a flowFrame into a flowSet — nest.flowFrame","text":"flowSet wherein cells grouped constituent flowFrames based columns used nest.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/new_tof_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for a tof_tibble. — new_tof_tibble","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"Constructor tof_tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/new_tof_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"","code":"new_tof_tibble(x = dplyr::tibble(), panel = dplyr::tibble())"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/new_tof_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"x data.frame tibble containing single-cell mass cytometry data rows cells columns CyTOF measurements. panel data.frame tibble containing information panel mass cytometry data x.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/new_tof_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for a tof_tibble. — new_tof_tibble","text":"`tof_tbl`, tibble extension tracks attributes useful CyTOF data analysis.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a single column. — pull.flowFrame","title":"Extract a single column. — pull.flowFrame","text":"pull() similar $. mostly useful looks little nicer pipes.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a single column. — pull.flowFrame","text":"","code":"# S3 method for flowFrame pull(.data, var = -1, name = NULL, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a single column. — pull.flowFrame","text":".data flowFrame. var variable specified : * literal variable name * positive integer, giving position counting left * negative integer, giving position counting right. name optional parameter specifies column used names named vector. Specified similar manner var. ... use methods.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a single column. — pull.flowFrame","text":"vector size .data.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a single column. — pull.flowSet","title":"Extract a single column. — pull.flowSet","text":"pull() similar $. mostly useful looks little nicer pipes.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a single column. — pull.flowSet","text":"","code":"# S3 method for flowSet pull(.data, var = -1, name = NULL, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a single column. — pull.flowSet","text":".data flowSet. var variable specified : * literal variable name * positive integer, giving position counting left * negative integer, giving position counting right. name optional parameter specifies column used names named vector. Specified similar manner var. ... use methods.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/pull.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a single column. — pull.flowSet","text":"vector size .data.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. rlang :=, .data","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename columns in a flowFrame — rename.flowFrame","title":"Rename columns in a flowFrame — rename.flowFrame","text":"Rename columns flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename columns in a flowFrame — rename.flowFrame","text":"","code":"# S3 method for flowFrame rename(.data, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename columns in a flowFrame — rename.flowFrame","text":".data flowFrame ... Unquoted name-value pairs (specified featureNames). Use new_name = old_name rename selected columns","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename columns in a flowFrame — rename.flowFrame","text":"object type .data. output following properties: * Rows affected. * Column names changed; column order preserved. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename columns in a flowSet — rename.flowSet","title":"Rename columns in a flowSet — rename.flowSet","text":"Rename columns flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename columns in a flowSet — rename.flowSet","text":"","code":"# S3 method for flowSet rename(.data, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename columns in a flowSet — rename.flowSet","text":".data flowSet ... Unquoted name-value pairs (specified featureNames flowFrames making flowSet). Use new_name = old_name rename selected columns","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename columns in a flowSet — rename.flowSet","text":"object type .data. output following properties: * Rows affected. * Column names changed; column order preserved. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename columns in a flowFrame — rename_with.flowFrame","title":"Rename columns in a flowFrame — rename_with.flowFrame","text":"Rename columns flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename columns in a flowFrame — rename_with.flowFrame","text":"","code":"# S3 method for flowFrame rename_with(.data, .fn, .cols = dplyr::everything(), ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename columns in a flowFrame — rename_with.flowFrame","text":".data flowFrame .fn function used transform selected .cols. return character vector length input. .cols Unquoted column names indicating columns rename (specified featureNames). ... Additional arguments passed onto .fn.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename columns in a flowFrame — rename_with.flowFrame","text":"object type .data. output following properties: * Rows affected. * Column names changed; column order preserved. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename columns in a flowSet — rename_with.flowSet","title":"Rename columns in a flowSet — rename_with.flowSet","text":"Rename columns flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename columns in a flowSet — rename_with.flowSet","text":"","code":"# S3 method for flowSet rename_with(.data, .fn, .cols = dplyr::everything(), ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename columns in a flowSet — rename_with.flowSet","text":".data flowSet .fn function used transform selected .cols. return character vector length input. .cols Unquoted column names indicating columns rename (specified featureNames flowFrames making flowSet). ... Additional arguments passed onto .fn.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/rename_with.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename columns in a flowSet — rename_with.flowSet","text":"object type .data. output following properties: * Rows affected. * Column names changed; column order preserved. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep or drop columns using their names and types. — select.flowFrame","title":"Keep or drop columns using their names and types. — select.flowFrame","text":"Keep drop columns using names types.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep or drop columns using their names and types. — select.flowFrame","text":"","code":"# S3 method for flowFrame select(.data, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep or drop columns using their names and types. — select.flowFrame","text":".data flowFrame ... One unquoted expressions separated commas. Variables names (specified featureNames) can used positions flowFrame). Supports tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep or drop columns using their names and types. — select.flowFrame","text":"flowFrame. output following properties: * Rows affected. * Output columns subset input columns, potentially different order. Columns renamed new_name = old_name form used. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep or drop columns using their names and types. — select.flowSet","title":"Keep or drop columns using their names and types. — select.flowSet","text":"Keep drop columns using names types.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep or drop columns using their names and types. — select.flowSet","text":"","code":"# S3 method for flowSet select(.data, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep or drop columns using their names and types. — select.flowSet","text":".data flowSet ... One unquoted expressions separated commas. Variables names (specified featureNames component flowFrames make flowSet) can used positions flowSet). Supports tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/select.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep or drop columns using their names and types. — select.flowSet","text":"flowSet. output following properties: * Rows affected. * Output columns subset input columns, potentially different order. Columns renamed new_name = old_name form used. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/simulate_cytometry_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Cytometry Data for FlowSet and FlowFrame Analysis — simulate_cytometry_data","title":"Simulate Cytometry Data for FlowSet and FlowFrame Analysis — simulate_cytometry_data","text":"Simulate Cytometry Data FlowSet FlowFrame Analysis","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/simulate_cytometry_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Cytometry Data for FlowSet and FlowFrame Analysis — simulate_cytometry_data","text":"","code":"simulate_cytometry_data(num_cells = 100, num_features = 10, num_flowframes = 5)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/simulate_cytometry_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Cytometry Data for FlowSet and FlowFrame Analysis — simulate_cytometry_data","text":"num_cells integer indicating number cells simulate. num_features integer indicating many features simulate. num_flowframes integer indicating many flowFrames simulate simulated flowSet.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/simulate_cytometry_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Cytometry Data for FlowSet and FlowFrame Analysis — simulate_cytometry_data","text":"list containing two entries: flowFrame flowSet.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/simulate_cytometry_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Cytometry Data for FlowSet and FlowFrame Analysis — simulate_cytometry_data","text":"","code":"simulate_cytometry_data() #> $flowframe #> flowFrame object 'V1' #> with 100 cells and 10 observables: #>            name       desc     range  minRange  maxRange #> $P1   feature_1  FEATURE_1       101         0       100 #> $P2   feature_2  FEATURE_2       101         0       100 #> $P3   feature_3  FEATURE_3       101         0       100 #> $P4   feature_4  FEATURE_4       101         0       100 #> $P5   feature_5  FEATURE_5        98         0        97 #> $P6   feature_6  FEATURE_6       101         0       100 #> $P7   feature_7  FEATURE_7       101         0       100 #> $P8   feature_8  FEATURE_8       100         0        99 #> $P9   feature_9  FEATURE_9       101         0       100 #> $P10 feature_10 FEATURE_10       100         0        99 #> 87 keywords are stored in the 'description' slot #>  #> $flowset #> A flowSet with 5 experiments. #>  #> column names(10): feature_1 feature_2 ... feature_9 feature_10 #>  #>"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows using their positions — slice.flowFrame","title":"Subset rows using their positions — slice.flowFrame","text":"Subset rows using positions","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows using their positions — slice.flowFrame","text":"","code":"# S3 method for flowFrame slice(.data, ..., .by = NULL, .preserve = FALSE)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows using their positions — slice.flowFrame","text":".data flowFrame ... Integer row values (keep). .Optionally, unquoted selection columns group just operation. alternative group_by. .preserve Currently unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows using their positions — slice.flowFrame","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows using their positions — slice.flowSet","title":"Subset rows using their positions — slice.flowSet","text":"Subset rows using positions","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows using their positions — slice.flowSet","text":"","code":"# S3 method for flowSet slice(.data, ..., .by = NULL, .preserve = FALSE)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows using their positions — slice.flowSet","text":".data flowSet ... Integer row values (keep). .Optionally, unquoted selection columns group just operation. alternative group_by. .preserve Currently unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows using their positions — slice.flowSet","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows at the head of a data structure. — slice_head.flowFrame","title":"Subset rows at the head of a data structure. — slice_head.flowFrame","text":"Subset rows head data structure.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows at the head of a data structure. — slice_head.flowFrame","text":"","code":"# S3 method for flowFrame slice_head(.data, ..., n, prop, by = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows at the head of a data structure. — slice_head.flowFrame","text":".data flowFrame ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows at the head of a data structure. — slice_head.flowFrame","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows at the head of a data structure. — slice_head.flowSet","title":"Subset rows at the head of a data structure. — slice_head.flowSet","text":"Subset rows head data structure.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows at the head of a data structure. — slice_head.flowSet","text":"","code":"# S3 method for flowSet slice_head(.data, ..., n, prop, by = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows at the head of a data structure. — slice_head.flowSet","text":".data flowSet ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_head.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows at the head of a data structure. — slice_head.flowSet","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows of a data structure in order. — slice_max.flowFrame","title":"Subset rows of a data structure in order. — slice_max.flowFrame","text":"Subset rows data structure order.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows of a data structure in order. — slice_max.flowFrame","text":"","code":"# S3 method for flowFrame slice_max(   .data,   order_by,   ...,   n,   prop,   by = NULL,   with_ties = TRUE,   na_rm = FALSE )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows of a data structure in order. — slice_max.flowFrame","text":".data flowFrame order_by Variable function variables order . order multiple variables, wrap data frame tibble. ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by. with_ties ties kept together? default, TRUE, may return rows request. Use FALSE ignore ties, return first n rows. na_rm missing values order_by removed result? FALSE, NA values sorted end included insufficient non-missing values reach n/prop.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows of a data structure in order. — slice_max.flowFrame","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows of a data structure in order. — slice_max.flowSet","title":"Subset rows of a data structure in order. — slice_max.flowSet","text":"Subset rows data structure order.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows of a data structure in order. — slice_max.flowSet","text":"","code":"# S3 method for flowSet slice_max(   .data,   order_by,   ...,   n,   prop,   by = NULL,   with_ties = TRUE,   na_rm = FALSE )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows of a data structure in order. — slice_max.flowSet","text":".data flowSet order_by Variable function variables order . order multiple variables, wrap data frame tibble. ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by. with_ties ties kept together? default, TRUE, may return rows request. Use FALSE ignore ties, return first n rows. na_rm missing values order_by removed result? FALSE, NA values sorted end included insufficient non-missing values reach n/prop.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_max.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows of a data structure in order. — slice_max.flowSet","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows of a data structure in order. — slice_min.flowFrame","title":"Subset rows of a data structure in order. — slice_min.flowFrame","text":"Subset rows data structure order.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows of a data structure in order. — slice_min.flowFrame","text":"","code":"# S3 method for flowFrame slice_min(   .data,   order_by,   ...,   n,   prop,   by = NULL,   with_ties = TRUE,   na_rm = FALSE )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows of a data structure in order. — slice_min.flowFrame","text":".data flowFrame order_by Variable function variables order . order multiple variables, wrap data frame tibble. ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by. with_ties ties kept together? default, TRUE, may return rows request. Use FALSE ignore ties, return first n rows. na_rm missing values order_by removed result? FALSE, NA values sorted end included insufficient non-missing values reach n/prop.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows of a data structure in order. — slice_min.flowFrame","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows of a data structure in order. — slice_min.flowSet","title":"Subset rows of a data structure in order. — slice_min.flowSet","text":"Subset rows data structure order.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows of a data structure in order. — slice_min.flowSet","text":"","code":"# S3 method for flowSet slice_min(   .data,   order_by,   ...,   n,   prop,   by = NULL,   with_ties = TRUE,   na_rm = FALSE )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows of a data structure in order. — slice_min.flowSet","text":".data flowSet order_by Variable function variables order . order multiple variables, wrap data frame tibble. ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by. with_ties ties kept together? default, TRUE, may return rows request. Use FALSE ignore ties, return first n rows. na_rm missing values order_by removed result? FALSE, NA values sorted end included insufficient non-missing values reach n/prop.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_min.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows of a data structure in order. — slice_min.flowSet","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows randomly — slice_sample.flowFrame","title":"Subset rows randomly — slice_sample.flowFrame","text":"Subset rows randomly","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows randomly — slice_sample.flowFrame","text":"","code":"# S3 method for flowFrame slice_sample(.data, ..., n, prop, by = NULL, weight_by = NULL, replace = FALSE)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows randomly — slice_sample.flowFrame","text":".data flowFrame ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by. weight_by Sampling weights. must evaluate vector non-negative numbers length input. Weights automatically standardized sum 1. replace sampling performed (TRUE) without (FALSE, default) replacement.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows randomly — slice_sample.flowFrame","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows randomly — slice_sample.flowSet","title":"Subset rows randomly — slice_sample.flowSet","text":"Subset rows randomly","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows randomly — slice_sample.flowSet","text":"","code":"# S3 method for flowSet slice_sample(.data, ..., n, prop, by = NULL, weight_by = NULL, replace = FALSE)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows randomly — slice_sample.flowSet","text":".data flowSet ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by. weight_by Sampling weights. must evaluate vector non-negative numbers length input. Weights automatically standardized sum 1. replace sampling performed (TRUE) without (FALSE, default) replacement.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_sample.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows randomly — slice_sample.flowSet","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows at the tail of a data structure. — slice_tail.flowFrame","title":"Subset rows at the tail of a data structure. — slice_tail.flowFrame","text":"Subset rows tail data structure.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows at the tail of a data structure. — slice_tail.flowFrame","text":"","code":"# S3 method for flowFrame slice_tail(.data, ..., n, prop, by = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows at the tail of a data structure. — slice_tail.flowFrame","text":".data flowFrame ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows at the tail of a data structure. — slice_tail.flowFrame","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows at the tail of a data structure. — slice_tail.flowSet","title":"Subset rows at the tail of a data structure. — slice_tail.flowSet","text":"Subset rows tail data structure.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows at the tail of a data structure. — slice_tail.flowSet","text":"","code":"# S3 method for flowSet slice_tail(.data, ..., n, prop, by = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows at the tail of a data structure. — slice_tail.flowSet","text":".data flowSet ... Unused. n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. Optionally, unquoted selection columns group just operation. alternative group_by.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/slice_tail.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows at the tail of a data structure. — slice_tail.flowSet","text":"object type .data. output following properties: * row may appear 0, 1, many times output. * Columns modified. * Groups modified. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a flowFrame. — summarise.flowFrame","title":"Summarize a flowFrame. — summarise.flowFrame","text":"Summarize flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a flowFrame. — summarise.flowFrame","text":"","code":"# S3 method for flowFrame summarise(.data, ..., .by = NULL, .groups = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a flowFrame. — summarise.flowFrame","text":".data .data flowFrame ... Name-value pairs summary functions. name name variable result. .Optionally, selection columns group just operation, functioning alternative group_by(). .groups Grouping structure result. * \"drop_last\": dropping last level grouping. * \"drop\": levels grouping dropped. * \"keep\": grouping structure .data. * \"rowwise\": row group.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a flowFrame. — summarise.flowFrame","text":"data.frame containing summarized result.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a flowSet. — summarise.flowSet","title":"Summarize a flowSet. — summarise.flowSet","text":"Summarize flowSet.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a flowSet. — summarise.flowSet","text":"","code":"# S3 method for flowSet summarise(.data, ..., .by = NULL, .groups = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a flowSet. — summarise.flowSet","text":".data .data flowSet ... Name-value pairs summary functions. name name variable result. .Optionally, selection columns group just operation, functioning alternative group_by(). .groups Grouping structure result. * \"drop_last\": dropping last level grouping. * \"drop\": levels grouping dropped. * \"keep\": grouping structure .data. * \"rowwise\": row group.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarise.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a flowSet. — summarise.flowSet","text":"data.frame containing summarized result.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a flowFrame. — summarize.flowFrame","title":"Summarize a flowFrame. — summarize.flowFrame","text":"Summarize flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a flowFrame. — summarize.flowFrame","text":"","code":"# S3 method for flowFrame summarize(.data, ..., .by = NULL, .groups = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a flowFrame. — summarize.flowFrame","text":".data .data flowFrame ... Name-value pairs summary functions. name name variable result. .Optionally, selection columns group just operation, functioning alternative group_by(). .groups Grouping structure result. * \"drop_last\": dropping last level grouping. * \"drop\": levels grouping dropped. * \"keep\": grouping structure .data. * \"rowwise\": row group.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a flowFrame. — summarize.flowFrame","text":"data.frame containing summarized result.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a flowSet. — summarize.flowSet","title":"Summarize a flowSet. — summarize.flowSet","text":"Summarize flowSet.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a flowSet. — summarize.flowSet","text":"","code":"# S3 method for flowSet summarize(.data, ..., .by = NULL, .groups = NULL)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a flowSet. — summarize.flowSet","text":".data flowSet ... Name-value pairs summary functions. name name variable result. .Optionally, selection columns group just operation, functioning alternative group_by(). .groups Grouping structure result. * \"drop_last\": dropping last level grouping. * \"drop\": levels grouping dropped. * \"keep\": grouping structure .data. * \"rowwise\": row group.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/summarize.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a flowSet. — summarize.flowSet","text":"data.frame containing summarized result.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_find_panel_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Use tidyFlowCore's opinionated heuristic for extracting a high-dimensional cytometry panel's channel-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","title":"Use tidyFlowCore's opinionated heuristic for extracting a high-dimensional cytometry panel's channel-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"Using character vectors obtained `name` `desc` columns parameters data flowFrame, infer cytometry panel used collect data return tidy tibble.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_find_panel_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use tidyFlowCore's opinionated heuristic for extracting a high-dimensional cytometry panel's channel-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"","code":"tof_find_panel_info(input_flowFrame)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_find_panel_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use tidyFlowCore's opinionated heuristic for extracting a high-dimensional cytometry panel's channel-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"input_flowFrame flowFrame (just read .fcs file) high-dimensional cytometry panel extracted","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_find_panel_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use tidyFlowCore's opinionated heuristic for extracting a high-dimensional cytometry panel's channel-antigen pairs\nfrom a flowFrame (read from a .fcs file.) — tof_find_panel_info","text":"tibble 4 columns (`channels`, `antigens`, `.flowCore_featureNames` `.flowCore_colnames`). first two columns correspond channels antigens high-dimensional cytometry panel used data acquisition, respectively. last two channels represent featureNames colnames attributes used represent channel input flowFrame.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_get_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get panel information from a tof_tibble — tof_get_panel","title":"Get panel information from a tof_tibble — tof_get_panel","text":"Get panel information tof_tibble","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_get_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"tof_get_panel(tof_tibble)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_get_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tof_tibble `tof_tbl`.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_get_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get panel information from a tof_tibble — tof_get_panel","text":"tibble containing information CyTOF panel used data acquisition data contained `tof_tibble`.","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_get_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get panel information from a tof_tibble — tof_get_panel","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_set_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Set panel information from a tof_tbl — tof_set_panel","title":"Set panel information from a tof_tbl — tof_set_panel","text":"Set panel information tof_tbl","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_set_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set panel information from a tof_tbl — tof_set_panel","text":"","code":"tof_set_panel(tof_tibble, panel)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_set_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set panel information from a tof_tbl — tof_set_panel","text":"tof_tibble `tof_tbl`. panel data.frame containing two columns (`channels` `antigens`) representing information panel","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_set_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set panel information from a tof_tbl — tof_set_panel","text":"`tof_tbl` containing information CyTOF panel used data acquisition data contained input `tof_tibble`. Two columns required: \"metals\" \"antigens\".","code":""},{"path":[]},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/tof_set_panel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set panel information from a tof_tbl — tof_set_panel","text":"","code":"NULL #> NULL"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Create, modify, and delete columns. — transmute.flowFrame","title":"Create, modify, and delete columns. — transmute.flowFrame","text":"Create, modify, delete columns.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create, modify, and delete columns. — transmute.flowFrame","text":"","code":"# S3 method for flowFrame transmute(.data, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create, modify, and delete columns. — transmute.flowFrame","text":".data flowFrame ... Name-value pairs. name (left side equals sign) gives name column output. right side equation performs computations using names channel according  featureNames. Supports tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create, modify, and delete columns. — transmute.flowFrame","text":"flowFrame. output following properties: * Columns created modified ... returned order specified .... * number rows affected. * Columns given value NULL removed. * flowFrame's identifier preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create, modify, and delete columns. — transmute.flowSet","title":"Create, modify, and delete columns. — transmute.flowSet","text":"Create, modify, delete columns.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create, modify, and delete columns. — transmute.flowSet","text":"","code":"# S3 method for flowSet transmute(.data, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create, modify, and delete columns. — transmute.flowSet","text":".data flowSet ... Name-value pairs. name (left side equals sign) gives name column output. right side equation performs computations using names channel according  featureNames .data's constituent  flowFrames. Supports tidyselection.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/transmute.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create, modify, and delete columns. — transmute.flowSet","text":"flowSet. output following properties: * Columns created modified ... returned order specified .... * number rows affected. * Columns given value NULL removed. * flowSet's pData preserved.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ungroup.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Ungroup a flowSet — ungroup.flowSet","title":"Ungroup a flowSet — ungroup.flowSet","text":"Ungroup flowSet","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ungroup.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ungroup a flowSet — ungroup.flowSet","text":"","code":"# S3 method for flowSet ungroup(x, ...)"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ungroup.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ungroup a flowSet — ungroup.flowSet","text":"x flowSet ... Variables/columns pData remove grouping. Note \"name\" field flowSet's pData special flowCore, requesting ungrouping name result copied column called \".tidyFlowCore_name\" result. Also note column \".tidytof_unique_identifier\" used internally effect ungrouping.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/ungroup.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ungroup a flowSet — ungroup.flowSet","text":"flowFrame flowSet depending degree ungrouping. Note unnest-ing ungrouping flowSet equivalent.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/unnest.flowSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Unnest a flowSet into a single\nflowFrame — unnest.flowSet","title":"Unnest a flowSet into a single\nflowFrame — unnest.flowSet","text":"Unnest flowSet single flowFrame","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/unnest.flowSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unnest a flowSet into a single\nflowFrame — unnest.flowSet","text":"","code":"# S3 method for flowSet unnest(   data,   cols,   ...,   keep_empty = FALSE,   ptype = NULL,   names_sep = NULL,   names_repair = \"check_unique\" )"},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/unnest.flowSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unnest a flowSet into a single\nflowFrame — unnest.flowSet","text":"data flowSet cols Columns pData unnest. ... Unused. keep_empty Unused. ptype Unused. names_sep Unused. names_repair Unused.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/reference/unnest.flowSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unnest a flowSet into a single\nflowFrame — unnest.flowSet","text":"flowFrame flowSet depending degree unnest-ing. Note unnest-ing ungrouping flowSet equivalent.","code":""},{"path":"https://keyes-timothy.github.io/tidyFlowCore/news/index.html","id":"tidyflowcore-0990","dir":"Changelog","previous_headings":"","what":"tidyFlowCore 0.99.0","title":"tidyFlowCore 0.99.0","text":"NEW FEATURES Added NEWS.md file track changes package. SIGNIFICANT USER-VISIBLE CHANGES Submitted Bioconductor.","code":""}]
